name: Publish NPM Package

on:
  release:
    types: [published]

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'
          scope: '@product-mint'
          always-auth: true

      - name: Extract package info
        id: package
        run: |
          # Extract package name from tag (supports both formats: pkg@1.0.0 or @scope/pkg@1.0.0)
          FULL_TAG=${{ github.event.release.tag_name }}
          VERSION=${FULL_TAG##*@}
          PACKAGE_NAME=${FULL_TAG%@*}

          # Store in output variables
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "package=$PACKAGE_NAME" >> $GITHUB_OUTPUT

      - name: Install dependencies
        run: npm ci

      #   - name: Update version
      #     run: |
      #       npm version ${{ steps.package.outputs.version }} \
      #         --workspace ${{ steps.package.outputs.package }} \
      #         --no-git-tag-version

      - name: Build package
        run: npm run build --workspace ${{ steps.package.outputs.package }}

      - name: Run tests
        run: |
          if npm run test --workspace ${{ steps.package.outputs.package }} --dry-run &> /dev/null; then
            npm run test --workspace ${{ steps.package.outputs.package }}
          else
            echo "No test script found, skipping tests"
          fi

      - name: Validate package exists
        run: |
          if ! npm list --workspace ${{ steps.package.outputs.package }} &> /dev/null; then
            echo "Package ${{ steps.package.outputs.package }} not found in workspace"
            exit 1
          fi

      - name: Validate tag format
        run: |
          if [[ ! "${{ github.event.release.tag_name }}" =~ ^(@[a-z0-9-]+/)?[a-z0-9-]+@[0-9]+\.[0-9]+\.[0-9]+(-[a-z0-9]+)?$ ]]; then
            echo "Invalid tag format. Use format: (@scope/)?package@x.y.z"
            exit 1
          fi

      - name: Publish package
        run: npm publish --workspace ${{ steps.package.outputs.package }} --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
