/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  ISubscriptionTransferOracle,
  ISubscriptionTransferOracleInterface,
} from "../../oracle/ISubscriptionTransferOracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "productPassId",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "productIds",
        type: "uint256[]",
      },
    ],
    name: "isTransferable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class ISubscriptionTransferOracle__factory {
  static readonly abi = _abi;
  static createInterface(): ISubscriptionTransferOracleInterface {
    return new Interface(_abi) as ISubscriptionTransferOracleInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ISubscriptionTransferOracle {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as ISubscriptionTransferOracle;
  }
}
