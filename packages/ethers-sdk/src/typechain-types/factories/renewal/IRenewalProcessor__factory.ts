/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IRenewalProcessor,
  IRenewalProcessorInterface,
} from "../../renewal/IRenewalProcessor";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "orgId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "productPassId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "productId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum IRenewalProcessor.RenewalStatus",
        name: "status",
        type: "uint8",
      },
    ],
    name: "RenewalProcessed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_passId",
        type: "uint256",
      },
    ],
    name: "getAllPassRenewalStatus",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "passId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "productId",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "orgId",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "pricingId",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "startDate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "endDate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "timeRemaining",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isCancelled",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isPaused",
                type: "bool",
              },
            ],
            internalType: "struct ISubscriptionEscrow.Subscription",
            name: "subscription",
            type: "tuple",
          },
          {
            internalType: "enum ISubscriptionEscrow.SubscriptionStatus",
            name: "subStatus",
            type: "uint8",
          },
          {
            internalType: "enum IRenewalProcessor.RenewalStatus",
            name: "renewalStatus",
            type: "uint8",
          },
        ],
        internalType: "struct IRenewalProcessor.PassRenewalStatus[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_passIds",
        type: "uint256[]",
      },
    ],
    name: "getAllPassRenewalStatusBatch",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "passId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "productId",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "orgId",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "pricingId",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "startDate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "endDate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "timeRemaining",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isCancelled",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isPaused",
                type: "bool",
              },
            ],
            internalType: "struct ISubscriptionEscrow.Subscription",
            name: "subscription",
            type: "tuple",
          },
          {
            internalType: "enum ISubscriptionEscrow.SubscriptionStatus",
            name: "subStatus",
            type: "uint8",
          },
          {
            internalType: "enum IRenewalProcessor.RenewalStatus",
            name: "renewalStatus",
            type: "uint8",
          },
        ],
        internalType: "struct IRenewalProcessor.PassRenewalStatus[][]",
        name: "",
        type: "tuple[][]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_passId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_productId",
        type: "uint256",
      },
    ],
    name: "getSingleProductRenewalStatus",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "passId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "productId",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "orgId",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "pricingId",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "startDate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "endDate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "timeRemaining",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isCancelled",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isPaused",
                type: "bool",
              },
            ],
            internalType: "struct ISubscriptionEscrow.Subscription",
            name: "subscription",
            type: "tuple",
          },
          {
            internalType: "enum ISubscriptionEscrow.SubscriptionStatus",
            name: "subStatus",
            type: "uint8",
          },
          {
            internalType: "enum IRenewalProcessor.RenewalStatus",
            name: "renewalStatus",
            type: "uint8",
          },
        ],
        internalType: "struct IRenewalProcessor.PassRenewalStatus",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_passIds",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_productIds",
        type: "uint256[]",
      },
    ],
    name: "getSingleProductRenewalStatusBatch",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "passId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "productId",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "orgId",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "pricingId",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "startDate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "endDate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "timeRemaining",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isCancelled",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isPaused",
                type: "bool",
              },
            ],
            internalType: "struct ISubscriptionEscrow.Subscription",
            name: "subscription",
            type: "tuple",
          },
          {
            internalType: "enum ISubscriptionEscrow.SubscriptionStatus",
            name: "subStatus",
            type: "uint8",
          },
          {
            internalType: "enum IRenewalProcessor.RenewalStatus",
            name: "renewalStatus",
            type: "uint8",
          },
        ],
        internalType: "struct IRenewalProcessor.PassRenewalStatus[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_passId",
        type: "uint256",
      },
    ],
    name: "processAllPassRenewal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_passIds",
        type: "uint256[]",
      },
    ],
    name: "processAllPassRenewalBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_passId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_productId",
        type: "uint256",
      },
    ],
    name: "processSingleProductRenewal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_passIds",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_productIds",
        type: "uint256[]",
      },
    ],
    name: "processSingleProductRenewalBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IRenewalProcessor__factory {
  static readonly abi = _abi;
  static createInterface(): IRenewalProcessorInterface {
    return new Interface(_abi) as IRenewalProcessorInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IRenewalProcessor {
    return new Contract(address, _abi, runner) as unknown as IRenewalProcessor;
  }
}
