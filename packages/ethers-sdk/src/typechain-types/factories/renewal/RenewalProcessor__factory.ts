/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  RenewalProcessor,
  RenewalProcessorInterface,
} from "../../renewal/RenewalProcessor";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_registry",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "orgId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "productPassId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "productId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum IRenewalProcessor.RenewalStatus",
        name: "status",
        type: "uint8",
      },
    ],
    name: "RenewalProcessed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_passId",
        type: "uint256",
      },
    ],
    name: "processAllPassRenewal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_startPassId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_endPassId",
        type: "uint256",
      },
    ],
    name: "processAllPassRenewalBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_passId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_productId",
        type: "uint256",
      },
    ],
    name: "processSingleProductRenewal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "contract IContractRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161095f38038061095f83398101604081905261002f91610059565b600080546001600160a01b0319166001600160a01b03929092169190911790556001603355610089565b60006020828403121561006b57600080fd5b81516001600160a01b038116811461008257600080fd5b9392505050565b6108c7806100986000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80633506825b146100515780637b103999146100665780638ea1b2da14610095578063a02b046e146100a8575b600080fd5b61006461005f3660046105c7565b6100bb565b005b600054610079906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b6100646100a33660046105c7565b6100f6565b6100646100b63660046105e9565b610112565b6100c3610130565b815b8181116100e7576100d58161015a565b806100df81610602565b9150506100c5565b506100f26001603355565b5050565b6100fe610130565b6101088282610282565b6100f26001603355565b61011a610130565b6101238161015a565b61012d6001603355565b50565b60026033540361015357604051633ee5aeb560e01b815260040160405180910390fd5b6002603355565b60008060009054906101000a90046001600160a01b03166001600160a01b031663fc9354fa6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d29190610629565b6001600160a01b03166348f3c0e3836040518263ffffffff1660e01b81526004016101ff91815260200190565b600060405180830381865afa15801561021c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261024491908101906106c9565b905060005b815181101561027d57610275838383815181106102685761026861076f565b6020026020010151610282565b600101610249565b505050565b6000805460408051637e49aa7d60e11b8152905183926001600160a01b03169163fc9354fa9160048083019260209291908290030181865afa1580156102cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f09190610629565b60405163a461efb960e01b815260048101869052602481018590526001600160a01b03919091169063a461efb99060440161010060405180830381865afa15801561033f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036391906107a9565b509050428160600151111561037b576002915061048b565b8060a001511561038e576003915061048b565b8060c00151156103a1576004915061048b565b60008054906101000a90046001600160a01b03166001600160a01b0316635cbf60cc6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104169190610629565b604051633bc8fa8160e11b81526004810186905260248101859052600060448201526001600160a01b039190911690637791f50290606401600060405180830381600087803b15801561046857600080fd5b505af1925050508015610479575060015b610486576001915061048b565b600091505b600282600481111561049f5761049f61083a565b146105c157828460008054906101000a90046001600160a01b03166001600160a01b031663eebc3a696040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051b9190610629565b6001600160a01b03166382f205dd876040518263ffffffff1660e01b815260040161054891815260200190565b602060405180830381865afa158015610565573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105899190610850565b7f98309b18044647fd2d369a17c729e099f429fdc51683b0c21cdadd14f48f26ae856040516105b89190610869565b60405180910390a45b50505050565b600080604083850312156105da57600080fd5b50508035926020909101359150565b6000602082840312156105fb57600080fd5b5035919050565b60006001820161062257634e487b7160e01b600052601160045260246000fd5b5060010190565b60006020828403121561063b57600080fd5b81516001600160a01b038116811461065257600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b60405160e0810167ffffffffffffffff8111828210171561069257610692610659565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156106c1576106c1610659565b604052919050565b600060208083850312156106dc57600080fd5b825167ffffffffffffffff808211156106f457600080fd5b818501915085601f83011261070857600080fd5b81518181111561071a5761071a610659565b8060051b915061072b848301610698565b818152918301840191848101908884111561074557600080fd5b938501935b838510156107635784518252938501939085019061074a565b98975050505050505050565b634e487b7160e01b600052603260045260246000fd5b8051801515811461079557600080fd5b919050565b80516004811061079557600080fd5b6000808284036101008112156107be57600080fd5b60e08112156107cc57600080fd5b506107d561066f565b835181526020840151602082015260408401516040820152606084015160608201526080840151608082015261080d60a08501610785565b60a082015261081e60c08501610785565b60c0820152915061083160e0840161079a565b90509250929050565b634e487b7160e01b600052602160045260246000fd5b60006020828403121561086257600080fd5b5051919050565b602081016005831061088b57634e487b7160e01b600052602160045260246000fd5b9190529056fea264697066735822122005e7e3d277828492dc902447ee060005e13383639ae6ec9bba3124630f56ac2f64736f6c63430008180033";

type RenewalProcessorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RenewalProcessorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RenewalProcessor__factory extends ContractFactory {
  constructor(...args: RenewalProcessorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _registry: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_registry, overrides || {});
  }
  override deploy(
    _registry: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_registry, overrides || {}) as Promise<
      RenewalProcessor & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): RenewalProcessor__factory {
    return super.connect(runner) as RenewalProcessor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RenewalProcessorInterface {
    return new Interface(_abi) as RenewalProcessorInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): RenewalProcessor {
    return new Contract(address, _abi, runner) as unknown as RenewalProcessor;
  }
}
