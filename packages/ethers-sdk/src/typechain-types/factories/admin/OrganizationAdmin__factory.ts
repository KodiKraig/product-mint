/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  OrganizationAdmin,
  OrganizationAdminInterface,
} from "../../admin/OrganizationAdmin";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_contractRegistry",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "orgId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "admin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "OrgAdminUpdate",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "organizationId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
    ],
    name: "addAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "organizationId",
        type: "uint256",
      },
    ],
    name: "getAdmins",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "organizationId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
    ],
    name: "isAdmin",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "contract IContractRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "organizationId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
    ],
    name: "removeAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "organizationId",
        type: "uint256",
      },
    ],
    name: "removeAllAdmins",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001117380380620011178339818101604052810190620000379190620000ea565b80806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506200011c565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000b28262000085565b9050919050565b620000c481620000a5565b8114620000d057600080fd5b50565b600081519050620000e481620000b9565b92915050565b60006020828403121562000103576200010262000080565b5b60006200011384828501620000d3565b91505092915050565b610feb806200012c6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80637eb0bdc91161005b5780637eb0bdc914610100578063829311d21461011c5780639528164814610138578063dbdc814b146101685761007d565b806301ffc9a714610082578063146a2911146100b25780637b103999146100e2575b600080fd5b61009c60048036038101906100979190610a4f565b610184565b6040516100a99190610a97565b60405180910390f35b6100cc60048036038101906100c79190610b46565b610256565b6040516100d99190610a97565b60405180910390f35b6100ea610285565b6040516100f79190610be5565b60405180910390f35b61011a60048036038101906101159190610b46565b6102a9565b005b61013660048036038101906101319190610c00565b610392565b005b610152600480360381019061014d9190610c00565b610484565b60405161015f9190610ceb565b60405180910390f35b610182600480360381019061017d9190610b46565b6104a8565b005b60007fa6bd1209000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061024f57507f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b600061027d826033600086815260200190815260200160002061059290919063ffffffff16565b905092915050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b816102b3816105c2565b6102d8826033600086815260200190815260200160002061059290919063ffffffff16565b610317576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030e90610d6a565b60405180910390fd5b61033c826033600086815260200190815260200160002061060d90919063ffffffff16565b508173ffffffffffffffffffffffffffffffffffffffff16837f87fd40bb6b885abfecf2754b655e5305fe55362fe513c29f96296ec7068f6c2660006040516103859190610a97565b60405180910390a3505050565b8061039c816105c2565b60006103b96033600085815260200190815260200160002061063d565b905060005b815181101561047e576104068282815181106103dd576103dc610d8a565b5b60200260200101516033600087815260200190815260200160002061060d90919063ffffffff16565b5081818151811061041a57610419610d8a565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff16847f87fd40bb6b885abfecf2754b655e5305fe55362fe513c29f96296ec7068f6c2660006040516104699190610a97565b60405180910390a380806001019150506103be565b50505050565b60606104a16033600084815260200190815260200160002061063d565b9050919050565b816104b2816105c2565b6104d7826033600086815260200190815260200160002061059290919063ffffffff16565b15610517576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050e90610e05565b60405180910390fd5b61053c826033600086815260200190815260200160002061065e90919063ffffffff16565b508173ffffffffffffffffffffffffffffffffffffffff16837f87fd40bb6b885abfecf2754b655e5305fe55362fe513c29f96296ec7068f6c2660016040516105859190610a97565b60405180910390a3505050565b60006105ba836000018373ffffffffffffffffffffffffffffffffffffffff1660001b61068e565b905092915050565b6105cb816106b1565b61060a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060190610e97565b60405180910390fd5b50565b6000610635836000018373ffffffffffffffffffffffffffffffffffffffff1660001b6106f8565b905092915050565b6060600061064d8360000161080c565b905060608190508092505050919050565b6000610686836000018373ffffffffffffffffffffffffffffffffffffffff1660001b610868565b905092915050565b600080836001016000848152602001908152602001600020541415905092915050565b60006106bb6108d8565b73ffffffffffffffffffffffffffffffffffffffff166106da836108e0565b73ffffffffffffffffffffffffffffffffffffffff16149050919050565b6000808360010160008481526020019081526020016000205490506000811461080057600060018261072a9190610ee6565b90506000600186600001805490506107429190610ee6565b90508082146107b157600086600001828154811061076357610762610d8a565b5b906000526020600020015490508087600001848154811061078757610786610d8a565b5b90600052602060002001819055508387600101600083815260200190815260200160002081905550505b856000018054806107c5576107c4610f1a565b5b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610806565b60009150505b92915050565b60608160000180548060200260200160405190810160405280929190818152602001828054801561085c57602002820191906000526020600020905b815481526020019060010190808311610848575b50505050509050919050565b6000610874838361068e565b6108cd5782600001829080600181540180825580915050600190039060005260206000200160009091909190915055826000018054905083600101600084815260200190815260200160002081905550600190506108d2565b600090505b92915050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cfd8fe0c6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561094e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109729190610f5e565b73ffffffffffffffffffffffffffffffffffffffff16636352211e836040518263ffffffff1660e01b81526004016109aa9190610f9a565b602060405180830381865afa1580156109c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109eb9190610f5e565b9050919050565b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610a2c816109f7565b8114610a3757600080fd5b50565b600081359050610a4981610a23565b92915050565b600060208284031215610a6557610a646109f2565b5b6000610a7384828501610a3a565b91505092915050565b60008115159050919050565b610a9181610a7c565b82525050565b6000602082019050610aac6000830184610a88565b92915050565b6000819050919050565b610ac581610ab2565b8114610ad057600080fd5b50565b600081359050610ae281610abc565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b1382610ae8565b9050919050565b610b2381610b08565b8114610b2e57600080fd5b50565b600081359050610b4081610b1a565b92915050565b60008060408385031215610b5d57610b5c6109f2565b5b6000610b6b85828601610ad3565b9250506020610b7c85828601610b31565b9150509250929050565b6000819050919050565b6000610bab610ba6610ba184610ae8565b610b86565b610ae8565b9050919050565b6000610bbd82610b90565b9050919050565b6000610bcf82610bb2565b9050919050565b610bdf81610bc4565b82525050565b6000602082019050610bfa6000830184610bd6565b92915050565b600060208284031215610c1657610c156109f2565b5b6000610c2484828501610ad3565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610c6281610b08565b82525050565b6000610c748383610c59565b60208301905092915050565b6000602082019050919050565b6000610c9882610c2d565b610ca28185610c38565b9350610cad83610c49565b8060005b83811015610cde578151610cc58882610c68565b9750610cd083610c80565b925050600181019050610cb1565b5085935050505092915050565b60006020820190508181036000830152610d058184610c8d565b905092915050565b600082825260208201905092915050565b7f41646d696e206e6f7420666f756e640000000000000000000000000000000000600082015250565b6000610d54600f83610d0d565b9150610d5f82610d1e565b602082019050919050565b60006020820190508181036000830152610d8381610d47565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f41646d696e20616c726561647920657869737473000000000000000000000000600082015250565b6000610def601483610d0d565b9150610dfa82610db9565b602082019050919050565b60006020820190508181036000830152610e1e81610de2565b9050919050565b7f4e6f7420746865206f776e6572206f6620746865204f7267616e697a6174696f60008201527f6e4e465400000000000000000000000000000000000000000000000000000000602082015250565b6000610e81602483610d0d565b9150610e8c82610e25565b604082019050919050565b60006020820190508181036000830152610eb081610e74565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610ef182610ab2565b9150610efc83610ab2565b9250828203905081811115610f1457610f13610eb7565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b600081519050610f5881610b1a565b92915050565b600060208284031215610f7457610f736109f2565b5b6000610f8284828501610f49565b91505092915050565b610f9481610ab2565b82525050565b6000602082019050610faf6000830184610f8b565b9291505056fea26469706673582212207187ffe5feef7e88588716bcc06c9638a9c2dde5864e8eed91aceca9a97c1e5464736f6c63430008180033";

type OrganizationAdminConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OrganizationAdminConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OrganizationAdmin__factory extends ContractFactory {
  constructor(...args: OrganizationAdminConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _contractRegistry: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_contractRegistry, overrides || {});
  }
  override deploy(
    _contractRegistry: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_contractRegistry, overrides || {}) as Promise<
      OrganizationAdmin & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): OrganizationAdmin__factory {
    return super.connect(runner) as OrganizationAdmin__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OrganizationAdminInterface {
    return new Interface(_abi) as OrganizationAdminInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): OrganizationAdmin {
    return new Contract(address, _abi, runner) as unknown as OrganizationAdmin;
  }
}
