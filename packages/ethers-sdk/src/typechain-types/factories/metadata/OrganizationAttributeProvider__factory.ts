/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  OrganizationAttributeProvider,
  OrganizationAttributeProviderInterface,
} from "../../metadata/OrganizationAttributeProvider";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "registry",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "attributesForToken",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "contract IContractRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516200107938038062001079833981810160405281019061003491906100df565b80806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505061010c565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100ac82610081565b9050919050565b6100bc816100a1565b81146100c757600080fd5b50565b6000815190506100d9816100b3565b92915050565b6000602082840312156100f5576100f461007c565b5b6000610103848285016100ca565b91505092915050565b610f5d806200011c6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806301ffc9a7146100465780637b10399914610076578063e0c099ed14610094575b600080fd5b610060600480360381019061005b919061095a565b6100c4565b60405161006d91906109a2565b60405180910390f35b61007e610196565b60405161008b9190610a3c565b60405180910390f35b6100ae60048036038101906100a99190610a8d565b6101ba565b6040516100bb9190610b4a565b60405180910390f35b60007fe0c099ed000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061018f57507f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663eebc3a696040518163ffffffff1660e01b8152600401602060405180830381865afa15801561022a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061024e9190610baa565b90506103136040518060400160405280600e81526020017f57686974656c697374204f6e6c790000000000000000000000000000000000008152508273ffffffffffffffffffffffffffffffffffffffff1663af33f722866040518263ffffffff1660e01b81526004016102c29190610be6565b602060405180830381865afa1580156102df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103039190610c2d565b151561058090919063ffffffff16565b6103d46040518060400160405280600981526020017f4d6178204d696e747300000000000000000000000000000000000000000000008152508373ffffffffffffffffffffffffffffffffffffffff1663da968ff5876040518263ffffffff1660e01b81526004016103859190610be6565b602060405180830381865afa1580156103a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c69190610c6f565b61059c90919063ffffffff16565b6104956040518060400160405280600d81526020017f50726f647563747320536f6c64000000000000000000000000000000000000008152508473ffffffffffffffffffffffffffffffffffffffff16633a225da8886040518263ffffffff1660e01b81526004016104469190610be6565b602060405180830381865afa158015610463573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104879190610c6f565b6105fc90919063ffffffff16565b6105566040518060400160405280601281526020017f50726f647563742050617373204d696e747300000000000000000000000000008152508573ffffffffffffffffffffffffffffffffffffffff1663c9f46afa896040518263ffffffff1660e01b81526004016105079190610be6565b602060405180830381865afa158015610524573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105489190610c6f565b6105fc90919063ffffffff16565b6040516020016105699493929190610cfe565b604051602081830303815290604052915050919050565b606061059461058e84610630565b836106b0565b905092915050565b60606105f4600084146105b7576105b2846106dc565b6105ee565b6040518060400160405280600881526020017f4e6f204c696d69740000000000000000000000000000000000000000000000008152505b836106b0565b905092915050565b606081610608846106dc565b604051602001610619929190610ddb565b604051602081830303815290604052905092915050565b606081610672576040518060400160405280600581526020017f46616c73650000000000000000000000000000000000000000000000000000008152506106a9565b6040518060400160405280600481526020017f54727565000000000000000000000000000000000000000000000000000000008152505b9050919050565b606081836040516020016106c5929190610e78565b604051602081830303815290604052905092915050565b6060600060016106eb846107aa565b01905060008167ffffffffffffffff81111561070a57610709610ec9565b5b6040519080825280601f01601f19166020018201604052801561073c5781602001600182028036833780820191505090505b509050600082602001820190505b60011561079f578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a858161079357610792610ef8565b5b0494506000850361074a575b819350505050919050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310610808577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816107fe576107fd610ef8565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310610845576d04ee2d6d415b85acef8100000000838161083b5761083a610ef8565b5b0492506020810190505b662386f26fc10000831061087457662386f26fc10000838161086a57610869610ef8565b5b0492506010810190505b6305f5e100831061089d576305f5e100838161089357610892610ef8565b5b0492506008810190505b61271083106108c25761271083816108b8576108b7610ef8565b5b0492506004810190505b606483106108e557606483816108db576108da610ef8565b5b0492506002810190505b600a83106108f4576001810190505b80915050919050565b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61093781610902565b811461094257600080fd5b50565b6000813590506109548161092e565b92915050565b6000602082840312156109705761096f6108fd565b5b600061097e84828501610945565b91505092915050565b60008115159050919050565b61099c81610987565b82525050565b60006020820190506109b76000830184610993565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610a026109fd6109f8846109bd565b6109dd565b6109bd565b9050919050565b6000610a14826109e7565b9050919050565b6000610a2682610a09565b9050919050565b610a3681610a1b565b82525050565b6000602082019050610a516000830184610a2d565b92915050565b6000819050919050565b610a6a81610a57565b8114610a7557600080fd5b50565b600081359050610a8781610a61565b92915050565b600060208284031215610aa357610aa26108fd565b5b6000610ab184828501610a78565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610af4578082015181840152602081019050610ad9565b60008484015250505050565b6000601f19601f8301169050919050565b6000610b1c82610aba565b610b268185610ac5565b9350610b36818560208601610ad6565b610b3f81610b00565b840191505092915050565b60006020820190508181036000830152610b648184610b11565b905092915050565b6000610b77826109bd565b9050919050565b610b8781610b6c565b8114610b9257600080fd5b50565b600081519050610ba481610b7e565b92915050565b600060208284031215610bc057610bbf6108fd565b5b6000610bce84828501610b95565b91505092915050565b610be081610a57565b82525050565b6000602082019050610bfb6000830184610bd7565b92915050565b610c0a81610987565b8114610c1557600080fd5b50565b600081519050610c2781610c01565b92915050565b600060208284031215610c4357610c426108fd565b5b6000610c5184828501610c18565b91505092915050565b600081519050610c6981610a61565b92915050565b600060208284031215610c8557610c846108fd565b5b6000610c9384828501610c5a565b91505092915050565b600081905092915050565b6000610cb282610aba565b610cbc8185610c9c565b9350610ccc818560208601610ad6565b80840191505092915050565b7f2c00000000000000000000000000000000000000000000000000000000000000815250565b6000610d0a8287610ca7565b9150610d1582610cd8565b600182019150610d258286610ca7565b9150610d3082610cd8565b600182019150610d408285610ca7565b9150610d4b82610cd8565b600182019150610d5b8284610ca7565b915081905095945050505050565b7f7b2274726169745f74797065223a202200000000000000000000000000000000815250565b7f222c202276616c7565223a200000000000000000000000000000000000000000815250565b7f7d00000000000000000000000000000000000000000000000000000000000000815250565b6000610de682610d69565b601082019150610df68285610ca7565b9150610e0182610d8f565b600c82019150610e118284610ca7565b9150610e1c82610db5565b6001820191508190509392505050565b7f222c202276616c7565223a202200000000000000000000000000000000000000815250565b7f227d000000000000000000000000000000000000000000000000000000000000815250565b6000610e8382610d69565b601082019150610e938285610ca7565b9150610e9e82610e2c565b600d82019150610eae8284610ca7565b9150610eb982610e52565b6002820191508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fdfea2646970667358221220e00038e3f8a9745389369b8d1f9b681288f430d960ed82d1665864b24a819e8f64736f6c63430008180033";

type OrganizationAttributeProviderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OrganizationAttributeProviderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OrganizationAttributeProvider__factory extends ContractFactory {
  constructor(...args: OrganizationAttributeProviderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    registry: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(registry, overrides || {});
  }
  override deploy(
    registry: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(registry, overrides || {}) as Promise<
      OrganizationAttributeProvider & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): OrganizationAttributeProvider__factory {
    return super.connect(runner) as OrganizationAttributeProvider__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OrganizationAttributeProviderInterface {
    return new Interface(_abi) as OrganizationAttributeProviderInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): OrganizationAttributeProvider {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as OrganizationAttributeProvider;
  }
}
