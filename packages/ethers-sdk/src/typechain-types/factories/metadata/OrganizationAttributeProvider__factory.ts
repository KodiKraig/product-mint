/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  OrganizationAttributeProvider,
  OrganizationAttributeProviderInterface,
} from "../../metadata/OrganizationAttributeProvider";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "registry",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "attributesForToken",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "contract IContractRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161093b38038061093b83398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b6108a8806100936000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806301ffc9a7146100465780637b1039991461006e578063e0c099ed14610099575b600080fd5b610059610054366004610600565b6100b9565b60405190151581526020015b60405180910390f35b600054610081906001600160a01b031681565b6040516001600160a01b039091168152602001610065565b6100ac6100a736600461062a565b6100f0565b6040516100659190610667565b60006001600160e01b0319821663e0c099ed60e01b14806100ea57506001600160e01b031982166301ffc9a760e01b145b92915050565b600080546040805163eebc3a6960e01b81529051606093926001600160a01b03169163eebc3a699160048083019260209291908290030181865afa15801561013c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610160919061069a565b604080518082018252600e81526d57686974656c697374204f6e6c7960901b60208201529051635799fb9160e11b8152600481018690529192506101fb916001600160a01b0384169063af33f72290602401602060405180830381865afa1580156101cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101f391906106c3565b1515906103a7565b60408051808201825260098152684d6178204d696e747360b81b6020820152905163da968ff560e01b81526004810186905261028d91906001600160a01b0385169063da968ff590602401602060405180830381865afa158015610263573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028791906106e5565b906103c2565b604080518082018252600d81526c141c9bd91d58dd1cc814dbdb19609a1b602082015290516307444bb560e31b81526004810187905261032491906001600160a01b03861690633a225da8906024015b602060405180830381865afa1580156102fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031e91906106e5565b90610402565b604080518082018252601281527150726f647563742050617373204d696e747360701b602082015290516364fa357d60e11b81526004810188905261037d91906001600160a01b0387169063c9f46afa906024016102dd565b60405160200161039094939291906106fe565b604051602081830303815290604052915050919050565b60606103bb6103b584610436565b83610480565b9392505050565b60606103bb83156103db576103d684610495565b6103b5565b60405180604001604052806008815260200167139bc8131a5b5a5d60c21b81525083610480565b60608161040e84610495565b60405160200161041f929190610776565b604051602081830303815290604052905092915050565b606081610460576040518060400160405280600581526020016446616c736560d81b8152506100ea565b50506040805180820190915260048152635472756560e01b602082015290565b6060818360405160200161041f9291906107e8565b606060006104a283610528565b600101905060008167ffffffffffffffff8111156104c2576104c261085c565b6040519080825280601f01601f1916602001820160405280156104ec576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a85049450846104f657509392505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106105675772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610593576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106105b157662386f26fc10000830492506010015b6305f5e10083106105c9576305f5e100830492506008015b61271083106105dd57612710830492506004015b606483106105ef576064830492506002015b600a83106100ea5760010192915050565b60006020828403121561061257600080fd5b81356001600160e01b0319811681146103bb57600080fd5b60006020828403121561063c57600080fd5b5035919050565b60005b8381101561065e578181015183820152602001610646565b50506000910152565b6020815260008251806020840152610686816040850160208701610643565b601f01601f19169190910160400192915050565b6000602082840312156106ac57600080fd5b81516001600160a01b03811681146103bb57600080fd5b6000602082840312156106d557600080fd5b815180151581146103bb57600080fd5b6000602082840312156106f757600080fd5b5051919050565b60008551610710818460208a01610643565b8083019050600b60fa1b8082528651610730816001850160208b01610643565b60019201918201819052855161074d816002850160208a01610643565b60029201918201528351610768816003840160208801610643565b016003019695505050505050565b6f3d913a3930b4ba2fba3cb832911d101160811b815282516000906107a2816010850160208801610643565b6b0111610113b30b63ab2911d160a51b60109184019182015283516107ce81601c840160208801610643565b607d60f81b601c9290910191820152601d01949350505050565b6f3d913a3930b4ba2fba3cb832911d101160811b81528251600090610814816010850160208801610643565b6c111610113b30b63ab2911d101160991b601091840191820152835161084181601d840160208801610643565b61227d60f01b601d9290910191820152601f01949350505050565b634e487b7160e01b600052604160045260246000fdfea26469706673582212206e1c9eb48f624c194f62435fb80c12b57ee5365667f708d3401a08a3c45a292464736f6c63430008180033";

type OrganizationAttributeProviderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OrganizationAttributeProviderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OrganizationAttributeProvider__factory extends ContractFactory {
  constructor(...args: OrganizationAttributeProviderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    registry: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(registry, overrides || {});
  }
  override deploy(
    registry: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(registry, overrides || {}) as Promise<
      OrganizationAttributeProvider & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): OrganizationAttributeProvider__factory {
    return super.connect(runner) as OrganizationAttributeProvider__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OrganizationAttributeProviderInterface {
    return new Interface(_abi) as OrganizationAttributeProviderInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): OrganizationAttributeProvider {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as OrganizationAttributeProvider;
  }
}
