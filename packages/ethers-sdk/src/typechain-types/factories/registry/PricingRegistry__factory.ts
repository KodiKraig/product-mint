/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  PricingRegistry,
  PricingRegistryInterface,
} from "../../registry/PricingRegistry";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_contractRegistry",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "GraduatedLowerBoundMustBeZero",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidChargeStyle",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidQuantity",
    type: "error",
  },
  {
    inputs: [],
    name: "LastTierUpperBoundMustBeZeroToRepresentInfinity",
    type: "error",
  },
  {
    inputs: [],
    name: "LowerBoundGreaterThanUpperBound",
    type: "error",
  },
  {
    inputs: [],
    name: "LowerBoundMustBeOneGreaterThanPreviousUpperBound",
    type: "error",
  },
  {
    inputs: [],
    name: "NoTiersFound",
    type: "error",
  },
  {
    inputs: [],
    name: "PricingInactive",
    type: "error",
  },
  {
    inputs: [],
    name: "PricingNotAuthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "PricingRestrictedAccess",
    type: "error",
  },
  {
    inputs: [],
    name: "PricingTokensMismatch",
    type: "error",
  },
  {
    inputs: [],
    name: "RequiresERC20Token",
    type: "error",
  },
  {
    inputs: [],
    name: "RequiresOneTimeOrFlatRateChargeStyle",
    type: "error",
  },
  {
    inputs: [],
    name: "RequiresUsageChargeStyle",
    type: "error",
  },
  {
    inputs: [],
    name: "TokenNotWhitelisted",
    type: "error",
  },
  {
    inputs: [],
    name: "VolumeLowerBoundMustBeOne",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "organizationId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pricingId",
        type: "uint256",
      },
    ],
    name: "PricingCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "organizationId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pricingId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    name: "PricingStatusChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "organizationId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pricingId",
        type: "uint256",
      },
    ],
    name: "PricingUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "organizationId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pricingId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "productPassOwner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isRestricted",
        type: "bool",
      },
    ],
    name: "RestrictedAccessGranted",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "organizationId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "flatPrice",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "enum PricingUtils.ChargeFrequency",
            name: "chargeFrequency",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "isRestricted",
            type: "bool",
          },
        ],
        internalType:
          "struct IPricingRegistry.CreateFlatRateSubscriptionParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "createFlatRateSubscriptionPricing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "organizationId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "flatPrice",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "bool",
            name: "isRestricted",
            type: "bool",
          },
        ],
        internalType: "struct IPricingRegistry.CreateOneTimeParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "createOneTimePricing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "organizationId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "enum PricingUtils.ChargeFrequency",
            name: "chargeFrequency",
            type: "uint8",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "lowerBound",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "upperBound",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "pricePerUnit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "priceFlatRate",
                type: "uint256",
              },
            ],
            internalType: "struct PricingUtils.PricingTier[]",
            name: "tiers",
            type: "tuple[]",
          },
          {
            internalType: "bool",
            name: "isVolume",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isRestricted",
            type: "bool",
          },
        ],
        internalType: "struct IPricingRegistry.CreateTieredSubscriptionParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "createTieredSubscriptionPricing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "organizationId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "enum PricingUtils.ChargeFrequency",
            name: "chargeFrequency",
            type: "uint8",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "lowerBound",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "upperBound",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "pricePerUnit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "priceFlatRate",
                type: "uint256",
              },
            ],
            internalType: "struct PricingUtils.PricingTier[]",
            name: "tiers",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "usageMeterId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isVolume",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isRestricted",
            type: "bool",
          },
        ],
        internalType:
          "struct IPricingRegistry.CreateUsageBasedSubscriptionParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "createUsageBasedSubscriptionPricing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum PricingUtils.ChargeFrequency",
        name: "chargeFrequency",
        type: "uint8",
      },
    ],
    name: "getChargeFrequencyCycleDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pricingId",
        type: "uint256",
      },
    ],
    name: "getCycleDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_pricingIds",
        type: "uint256[]",
      },
    ],
    name: "getCycleDurationBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "cycleDurations",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "organizationId",
        type: "uint256",
      },
    ],
    name: "getOrgPricing",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "orgId",
            type: "uint256",
          },
          {
            internalType: "enum PricingUtils.ChargeStyle",
            name: "chargeStyle",
            type: "uint8",
          },
          {
            internalType: "enum PricingUtils.ChargeFrequency",
            name: "chargeFrequency",
            type: "uint8",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "lowerBound",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "upperBound",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "pricePerUnit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "priceFlatRate",
                type: "uint256",
              },
            ],
            internalType: "struct PricingUtils.PricingTier[]",
            name: "tiers",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "flatPrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "usageMeterId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isActive",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isRestricted",
            type: "bool",
          },
        ],
        internalType: "struct PricingUtils.Pricing[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "organizationId",
        type: "uint256",
      },
    ],
    name: "getOrgPricingIds",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pricingId",
        type: "uint256",
      },
    ],
    name: "getPricing",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "orgId",
            type: "uint256",
          },
          {
            internalType: "enum PricingUtils.ChargeStyle",
            name: "chargeStyle",
            type: "uint8",
          },
          {
            internalType: "enum PricingUtils.ChargeFrequency",
            name: "chargeFrequency",
            type: "uint8",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "lowerBound",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "upperBound",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "pricePerUnit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "priceFlatRate",
                type: "uint256",
              },
            ],
            internalType: "struct PricingUtils.PricingTier[]",
            name: "tiers",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "flatPrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "usageMeterId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isActive",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isRestricted",
            type: "bool",
          },
        ],
        internalType: "struct PricingUtils.Pricing",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_pricingIds",
        type: "uint256[]",
      },
    ],
    name: "getPricingBatch",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "orgId",
            type: "uint256",
          },
          {
            internalType: "enum PricingUtils.ChargeStyle",
            name: "chargeStyle",
            type: "uint8",
          },
          {
            internalType: "enum PricingUtils.ChargeFrequency",
            name: "chargeFrequency",
            type: "uint8",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "lowerBound",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "upperBound",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "pricePerUnit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "priceFlatRate",
                type: "uint256",
              },
            ],
            internalType: "struct PricingUtils.PricingTier[]",
            name: "tiers",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "flatPrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "usageMeterId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isActive",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isRestricted",
            type: "bool",
          },
        ],
        internalType: "struct PricingUtils.Pricing[]",
        name: "_pricing",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pricingSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "contract IContractRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "restrictedAccess",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pricingId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    name: "setPricingActive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pricingId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "flatPrice",
        type: "uint256",
      },
    ],
    name: "setPricingFlatPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pricingId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isRestricted",
        type: "bool",
      },
    ],
    name: "setPricingRestricted",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pricingId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "lowerBound",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "upperBound",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "pricePerUnit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "priceFlatRate",
            type: "uint256",
          },
        ],
        internalType: "struct PricingUtils.PricingTier[]",
        name: "tiers",
        type: "tuple[]",
      },
    ],
    name: "setPricingTiers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pricingId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "setPricingToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pricingId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "usageMeterId",
        type: "uint256",
      },
    ],
    name: "setPricingUsageMeterId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pricingId",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "productPassOwners",
        type: "address[]",
      },
      {
        internalType: "bool[]",
        name: "isRestricted",
        type: "bool[]",
      },
    ],
    name: "setRestrictedAccess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_organizationId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_productPassOwner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_pricingId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_quantity",
        type: "uint256",
      },
    ],
    name: "validateCheckout",
    outputs: [
      {
        internalType: "uint256",
        name: "cycleDuration",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_organizationId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_productPassOwner",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_pricingIds",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_quantities",
        type: "uint256[]",
      },
    ],
    name: "validateCheckoutBatch",
    outputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "cycleDurations",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_organizationId",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_pricingIds",
        type: "uint256[]",
      },
    ],
    name: "validateOrgPricing",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "lowerBound",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "upperBound",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "pricePerUnit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "priceFlatRate",
            type: "uint256",
          },
        ],
        internalType: "struct PricingUtils.PricingTier[]",
        name: "tiers",
        type: "tuple[]",
      },
      {
        internalType: "enum PricingUtils.ChargeStyle",
        name: "chargeStyle",
        type: "uint8",
      },
    ],
    name: "validateTiers",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162004822380380620048228339818101604052810190620000379190620000ea565b80806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506200011c565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000b28262000085565b9050919050565b620000c481620000a5565b8114620000d057600080fd5b50565b600081519050620000e481620000b9565b92915050565b60006020828403121562000103576200010262000080565b5b60006200011384828501620000d3565b91505092915050565b6146f6806200012c6000396000f3fe608060405234801561001057600080fd5b506004361061018d5760003560e01c80637b103999116100de578063c12f1a4211610097578063d4ca8b7011610071578063d4ca8b701461049f578063daa0a961146104cf578063f332f2bc146104eb578063f3ef32cf1461051c5761018d565b8063c12f1a4214610437578063c4e99fd114610467578063cd9d0ac7146104835761018d565b80637b1039991461038d5780638d0465c3146103ab578063983e59d3146103c7578063a9a07fab146103e3578063be2910ea146103ff578063bf1d2beb1461041b5761018d565b806335eae1841161014b5780633b81b594116101255780633b81b594146102cc57806346fd6e06146102fc5780635149f44e1461032c578063692555ec1461035d5761018d565b806335eae184146102785780633686d36d146102945780633b53e2d6146102b05761018d565b80620e72c71461019257806301ffc9a7146101c25780630c6509ab146101f2578063285291c61461020e57806328bcbac61461022c578063302f43ea1461025c575b600080fd5b6101ac60048036038101906101a79190612f5b565b61054c565b6040516101b99190612f97565b60405180910390f35b6101dc60048036038101906101d7919061300a565b610566565b6040516101e99190613052565b60405180910390f35b61020c60048036038101906102079190613091565b610638565b005b610216610700565b6040516102239190612f97565b60405180910390f35b6102466004803603810190610241919061313f565b610706565b604051610253919061324a565b60405180910390f35b6102766004803603810190610271919061326c565b6107c1565b005b610292600480360381019061028d91906132eb565b610856565b005b6102ae60048036038101906102a99190613334565b61092e565b005b6102ca60048036038101906102c59190613334565b610a89565b005b6102e660048036038101906102e191906133d2565b610afc565b6040516102f39190613052565b60405180910390f35b61031660048036038101906103119190612f5b565b610b2b565b604051610323919061324a565b60405180910390f35b61034660048036038101906103419190612f5b565b610b4f565b60405161035492919061377a565b60405180910390f35b610377600480360381019061037291906137b1565b610b85565b6040516103849190612f97565b60405180910390f35b610395611124565b6040516103a29190613877565b60405180910390f35b6103c560048036038101906103c091906138be565b611148565b005b6103e160048036038101906103dc9190613954565b6111df565b005b6103fd60048036038101906103f891906139d3565b611254565b005b610419600480360381019061041491906138be565b6112f1565b005b61043560048036038101906104309190613a1f565b611393565b005b610451600480360381019061044c9190612f5b565b611442565b60405161045e9190613b11565b60405180910390f35b610481600480360381019061047c91906133d2565b611668565b005b61049d60048036038101906104989190613bdf565b6116e1565b005b6104b960048036038101906104b49190613dc3565b6118e6565b6040516104c69190613e0c565b60405180910390f35b6104e960048036038101906104e49190613e53565b61199f565b005b61050560048036038101906105009190613eb3565b611d19565b604051610513929190613f69565b60405180910390f35b61053660048036038101906105319190613fbe565b611f84565b6040516105439190612f97565b60405180910390f35b600061055f61055a83611442565b61206e565b9050919050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061063157507f3ac7ac05000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b8060000135610646816120bd565b6106ad82600001358360200160208101906106619190613feb565b8460800160208101906106749190614018565b61067f576003610682565b60025b8560400160208101906106959190613fbe565b8660a00160208101906106a89190614018565b612108565b6106c86036548380606001906106c39190614054565b61220d565b60365482600001357f7e1c1cdde81911cdb2eb97737e2f9d629b2749aa948c3cbecf6d494576c08b1b60405160405180910390a35050565b60365481565b60608282905067ffffffffffffffff81111561072557610724613c85565b5b6040519080825280602002602001820160405280156107535781602001602082028036833780820191505090505b50905060005b838390508110156107ba5761078e61078985858481811061077d5761077c6140b7565b5b90506020020135611442565b61206e565b8282815181106107a1576107a06140b7565b5b6020026020010181815250508080600101915050610759565b5092915050565b60005b828290508110156108505761080d8383838181106107e5576107e46140b7565b5b90506020020135603360008781526020019081526020016000206122e490919063ffffffff16565b610843576040517fa6199ccd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80806001019150506107c4565b50505050565b8060000135610864816120bd565b6108cb826000013583602001602081019061087f9190613feb565b8460a00160208101906108929190614018565b61089d5760056108a0565b60045b8560400160208101906108b39190613fbe565b8660c00160208101906108c69190614018565b612108565b6108e66036548380606001906108e19190614054565b61220d565b6108f660365483608001356122fe565b60365482600001357f7e1c1cdde81911cdb2eb97737e2f9d629b2749aa948c3cbecf6d494576c08b1b60405160405180910390a35050565b603460008381526020019081526020016000206000015461094e816120bd565b600060058111156109625761096161343e565b5b6034600085815260200190815260200160002060010160009054906101000a900460ff1660058111156109985761099761343e565b5b141580156109ee5750600160058111156109b5576109b461343e565b5b6034600085815260200190815260200160002060010160009054906101000a900460ff1660058111156109eb576109ea61343e565b5b14155b15610a25576040517f90be07d400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8160346000858152602001908152602001600020600401819055508260346000858152602001908152602001600020600001547f335f5afc83fe8c5a011a96dc39bcce9fb9d46fb5986502f7040e76e28b03612360405160405180910390a3505050565b6034600083815260200190815260200160002060000154610aa9816120bd565b610ab383836122fe565b8260346000858152602001908152602001600020600001547f335f5afc83fe8c5a011a96dc39bcce9fb9d46fb5986502f7040e76e28b03612360405160405180910390a3505050565b60356020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b6060610b4860336000848152602001908152602001600020612668565b9050919050565b6060806000610b6f60336000868152602001908152602001600020612668565b905080610b7b826118e6565b9250925050915091565b6000610bac83603360008881526020019081526020016000206122e490919063ffffffff16565b610be2576040517fa6199ccd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6034600084815260200190815260200160002060060160009054906101000a900460ff16610c3c576040517f9d3580cc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6034600084815260200190815260200160002060060160019054906101000a900460ff168015610cc757506035600084815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16155b15610cfe576040517f5fba433900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610ecc6034600085815260200190815260200160002060405180610120016040529081600082015481526020016001820160009054906101000a900460ff166005811115610d4f57610d4e61343e565b5b6005811115610d6157610d6061343e565b5b81526020016001820160019054906101000a900460ff166004811115610d8a57610d8961343e565b5b6004811115610d9c57610d9b61343e565b5b815260200160028201805480602002602001604051908101604052809291908181526020016000905b82821015610e1f578382906000526020600020906004020160405180608001604052908160008201548152602001600182015481526020016002820154815260200160038201548152505081526020019060010190610dc5565b5050505081526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160048201548152602001600582015481526020016006820160009054906101000a900460ff161515151581526020016006820160019054906101000a900460ff161515151581525050612689565b15610f105760008203610f0b576040517f524f409b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610f4c565b6000821115610f4b576040517f524f409b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b61111a6034600085815260200190815260200160002060405180610120016040529081600082015481526020016001820160009054906101000a900460ff166005811115610f9d57610f9c61343e565b5b6005811115610faf57610fae61343e565b5b81526020016001820160019054906101000a900460ff166004811115610fd857610fd761343e565b5b6004811115610fea57610fe961343e565b5b815260200160028201805480602002602001604051908101604052809291908181526020016000905b8282101561106d578382906000526020600020906004020160405180608001604052908160008201548152602001600182015481526020016002820154815260200160038201548152505081526020019060010190611013565b5050505081526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160048201548152602001600582015481526020016006820160009054906101000a900460ff161515151581526020016006820160019054906101000a900460ff16151515158152505061206e565b9050949350505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6034600083815260200190815260200160002060000154611168816120bd565b816034600085815260200190815260200160002060060160016101000a81548160ff0219169083151502179055508260346000858152602001908152602001600020600001547f335f5afc83fe8c5a011a96dc39bcce9fb9d46fb5986502f7040e76e28b03612360405160405180910390a3505050565b60346000848152602001908152602001600020600001546111ff816120bd565b61120a84848461220d565b8360346000868152602001908152602001600020600001547f335f5afc83fe8c5a011a96dc39bcce9fb9d46fb5986502f7040e76e28b03612360405160405180910390a350505050565b8060000135611262816120bd565b611298826000013583604001602081019061127d9190613feb565b6000808660600160208101906112939190614018565b612108565b81602001356034600060365481526020019081526020016000206004018190555060365482600001357f7e1c1cdde81911cdb2eb97737e2f9d629b2749aa948c3cbecf6d494576c08b1b60405160405180910390a35050565b6034600083815260200190815260200160002060000154611311816120bd565b816034600085815260200190815260200160002060060160006101000a81548160ff0219169083151502179055508260346000858152602001908152602001600020600001547f435c10dc1748d4f29b821eb3bfa0f2d8c38cf3b74cea15a28a6e6fdb0a413a49846040516113869190613052565b60405180910390a3505050565b80600001356113a1816120bd565b6113e982600001358360400160208101906113bc9190613feb565b60018560600160208101906113d19190613fbe565b8660800160208101906113e49190614018565b612108565b81602001356034600060365481526020019081526020016000206004018190555060365482600001357f7e1c1cdde81911cdb2eb97737e2f9d629b2749aa948c3cbecf6d494576c08b1b60405160405180910390a35050565b61144a612e2c565b60008211801561145c57506036548211155b61149b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161149290614143565b60405180910390fd5b6034600083815260200190815260200160002060405180610120016040529081600082015481526020016001820160009054906101000a900460ff1660058111156114e9576114e861343e565b5b60058111156114fb576114fa61343e565b5b81526020016001820160019054906101000a900460ff1660048111156115245761152361343e565b5b60048111156115365761153561343e565b5b815260200160028201805480602002602001604051908101604052809291908181526020016000905b828210156115b957838290600052602060002090600402016040518060800160405290816000820154815260200160018201548152602001600282015481526020016003820154815250508152602001906001019061155f565b5050505081526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160048201548152602001600582015481526020016006820160009054906101000a900460ff161515151581526020016006820160019054906101000a900460ff1615151515815250509050919050565b6034600083815260200190815260200160002060000154611688816120bd565b60006034600085815260200190815260200160002090506116a981846126f1565b8381600001547f335f5afc83fe8c5a011a96dc39bcce9fb9d46fb5986502f7040e76e28b03612360405160405180910390a350505050565b6034600086815260200190815260200160002060000154611701816120bd565b60008585905011801561171957508282905085859050145b611758576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161174f906141af565b60405180910390fd5b60005b858590508110156118dd57838382818110611779576117786140b7565b5b905060200201602081019061178e9190614018565b6035600089815260200190815260200160002060008888858181106117b6576117b56140b7565b5b90506020020160208101906117cb9190613feb565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555085858281811061182f5761182e6140b7565b5b90506020020160208101906118449190613feb565b73ffffffffffffffffffffffffffffffffffffffff1687603460008a8152602001908152602001600020600001547f103806997e4b32b4ec41cd6bd35e679ce9e65eeeb69fa41e95383bf271ce00498787868181106118a6576118a56140b7565b5b90506020020160208101906118bb9190614018565b6040516118c89190613052565b60405180910390a4808060010191505061175b565b50505050505050565b6060815167ffffffffffffffff81111561190357611902613c85565b5b60405190808252806020026020018201604052801561193c57816020015b611929612e2c565b8152602001906001900390816119215790505b50905060005b82518110156119995761196e838281518110611961576119606140b7565b5b6020026020010151611442565b828281518110611981576119806140b7565b5b60200260200101819052508080600101915050611942565b50919050565b600083839050036119dc576040517f4e5d546100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600260058111156119f0576119ef61343e565b5b816005811115611a0357611a0261343e565b5b1480611a33575060046005811115611a1e57611a1d61343e565b5b816005811115611a3157611a3061343e565b5b145b15611a9457600183836000818110611a4e57611a4d6140b7565b5b9050608002016000013514611a8f576040517f014fbd5200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611b7e565b60036005811115611aa857611aa761343e565b5b816005811115611abb57611aba61343e565b5b1480611aea5750600580811115611ad557611ad461343e565b5b816005811115611ae857611ae761343e565b5b145b15611b4b57600083836000818110611b0557611b046140b7565b5b9050608002016000013514611b46576040517fda63d74000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611b7d565b6040517ffe038ba200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b60005b83839050811015611d1357600081118015611bec575060018484600184611ba891906141fe565b818110611bb857611bb76140b7565b5b90506080020160200135611bcc9190614232565b848483818110611bdf57611bde6140b7565b5b9050608002016000013514155b15611c23576040517f9876f0e300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600184849050611c3391906141fe565b8103611c94576000848483818110611c4e57611c4d6140b7565b5b9050608002016020013514611c8f576040517f507b144500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611d13565b838382818110611ca757611ca66140b7565b5b90506080020160200135848483818110611cc457611cc36140b7565b5b905060800201600001351115611d06576040517f75d1413b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8080600101915050611b81565b50505050565b6000606060008686905011611d63576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d5a906142b2565b60405180910390fd5b838390508686905014611dab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611da290614344565b60405180910390fd5b6034600087876000818110611dc357611dc26140b7565b5b90506020020135815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691508585905067ffffffffffffffff811115611e1b57611e1a613c85565b5b604051908082528060200260200182016040528015611e495781602001602082028036833780820191505090505b50905060005b86869050811015611f7857611e988989898985818110611e7257611e716140b7565b5b90506020020135888886818110611e8c57611e8b6140b7565b5b90506020020135610b85565b828281518110611eab57611eaa6140b7565b5b6020026020010181815250508273ffffffffffffffffffffffffffffffffffffffff1660346000898985818110611ee557611ee46140b7565b5b90506020020135815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611f6b576040517f5ea04bbc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8080600101915050611e4f565b50965096945050505050565b6000806004811115611f9957611f9861343e565b5b826004811115611fac57611fab61343e565b5b03611fbc57620151809050612069565b60016004811115611fd057611fcf61343e565b5b826004811115611fe357611fe261343e565b5b03611ff35762093a809050612069565b600260048111156120075761200661343e565b5b82600481111561201a5761201961343e565b5b0361202a5762278d009050612069565b6003600481111561203e5761203d61343e565b5b8260048111156120515761205061343e565b5b03612061576276a7009050612069565b6301e1338090505b919050565b60008060058111156120835761208261343e565b5b8260200151600581111561209a5761209961343e565b5b036120a857600090506120b8565b6120b58260400151611f84565b90505b919050565b6120c681612a22565b612105576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120fc906143b0565b60405180910390fd5b50565b6036600081548092919061211b906143d0565b919050555060006034600060365481526020019081526020016000209050858160000181905550838160010160006101000a81548160ff021916908360058111156121695761216861343e565b5b0217905550828160010160016101000a81548160ff021916908360048111156121955761219461343e565b5b0217905550818160060160016101000a81548160ff02191690831515021790555060018160060160006101000a81548160ff0219169083151502179055506121dd81866126f1565b61220460365460336000898152602001908152602001600020612a3c90919063ffffffff16565b50505050505050565b61223b82826034600087815260200190815260200160002060010160009054906101000a900460ff1661199f565b60346000848152602001908152602001600020600201600061225d9190612eb6565b60005b828290508110156122de5760346000858152602001908152602001600020600201838383818110612294576122936140b7565b5b905060800201908060018154018082558091505060019003906000526020600020906004020160009091909190915081816122cf9190614554565b50508080600101915050612260565b50505050565b60006122f6836000018360001b612a56565b905092915050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166365f136736040518163ffffffff1660e01b8152600401602060405180830381865afa158015612369573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061238d9190614577565b73ffffffffffffffffffffffffffffffffffffffff1663c14ed615826040518263ffffffff1660e01b81526004016123c59190612f97565b602060405180830381865afa1580156123e2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061240691906145b9565b612445576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161243c90614632565b60405180910390fd5b6126136034600084815260200190815260200160002060405180610120016040529081600082015481526020016001820160009054906101000a900460ff1660058111156124965761249561343e565b5b60058111156124a8576124a761343e565b5b81526020016001820160019054906101000a900460ff1660048111156124d1576124d061343e565b5b60048111156124e3576124e261343e565b5b815260200160028201805480602002602001604051908101604052809291908181526020016000905b8282101561256657838290600052602060002090600402016040518060800160405290816000820154815260200160018201548152602001600282015481526020016003820154815250508152602001906001019061250c565b5050505081526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160048201548152602001600582015481526020016006820160009054906101000a900460ff161515151581526020016006820160019054906101000a900460ff161515151581525050612a79565b612649576040517f3364cca000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060346000848152602001908152602001600020600501819055505050565b6060600061267883600001612ae0565b905060608190508092505050919050565b60006002600581111561269f5761269e61343e565b5b826020015160058111156126b6576126b561343e565b5b14806126ea5750600360058111156126d1576126d061343e565b5b826020015160058111156126e8576126e761343e565b5b145b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614801561276357506000600581111561273c5761273b61343e565b5b8260010160009054906101000a900460ff1660058111156127605761275f61343e565b5b14155b15612799576040517edd48a600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146129db578073ffffffffffffffffffffffffffffffffffffffff166301ffc9a77f36372b07000000000000000000000000000000000000000000000000000000006040518263ffffffff1660e01b81526004016128269190614661565b602060405180830381865afa158015612843573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061286791906145b9565b61289c576040517edd48a600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a292f7d36040518163ffffffff1660e01b8152600401602060405180830381865afa158015612907573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061292b9190614577565b73ffffffffffffffffffffffffffffffffffffffff1663daf9c210826040518263ffffffff1660e01b8152600401612963919061467c565b602060405180830381865afa158015612980573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129a491906145b9565b6129da576040517ff84835a000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b808260030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6000612a3582612a30612b3c565b612b44565b9050919050565b6000612a4e836000018360001b612c69565b905092915050565b600080836001016000848152602001908152602001600020541415905092915050565b600060046005811115612a8f57612a8e61343e565b5b82602001516005811115612aa657612aa561343e565b5b1480612ad95750600580811115612ac057612abf61343e565b5b82602001516005811115612ad757612ad661343e565b5b145b9050919050565b606081600001805480602002602001604051908101604052809291908181526020018280548015612b3057602002820191906000526020600020905b815481526020019060010190808311612b1c575b50505050509050919050565b600033905090565b6000612b508383612cd9565b80612c61575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663595439736040518163ffffffff1660e01b8152600401602060405180830381865afa158015612bc1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612be59190614577565b73ffffffffffffffffffffffffffffffffffffffff1663146a291184846040518363ffffffff1660e01b8152600401612c1f929190614697565b602060405180830381865afa158015612c3c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c6091906145b9565b5b905092915050565b6000612c758383612a56565b612cce578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050612cd3565b600090505b92915050565b60008173ffffffffffffffffffffffffffffffffffffffff16612cfb84612d1a565b73ffffffffffffffffffffffffffffffffffffffff1614905092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cfd8fe0c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612d88573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612dac9190614577565b73ffffffffffffffffffffffffffffffffffffffff16636352211e836040518263ffffffff1660e01b8152600401612de49190612f97565b602060405180830381865afa158015612e01573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e259190614577565b9050919050565b6040518061012001604052806000815260200160006005811115612e5357612e5261343e565b5b815260200160006004811115612e6c57612e6b61343e565b5b815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081526020016000151581526020016000151581525090565b5080546000825560040290600052602060002090810190612ed79190612eda565b50565b5b80821115612f0d5760008082016000905560018201600090556002820160009055600382016000905550600401612edb565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b612f3881612f25565b8114612f4357600080fd5b50565b600081359050612f5581612f2f565b92915050565b600060208284031215612f7157612f70612f1b565b5b6000612f7f84828501612f46565b91505092915050565b612f9181612f25565b82525050565b6000602082019050612fac6000830184612f88565b92915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b612fe781612fb2565b8114612ff257600080fd5b50565b60008135905061300481612fde565b92915050565b6000602082840312156130205761301f612f1b565b5b600061302e84828501612ff5565b91505092915050565b60008115159050919050565b61304c81613037565b82525050565b60006020820190506130676000830184613043565b92915050565b600080fd5b600060c082840312156130885761308761306d565b5b81905092915050565b6000602082840312156130a7576130a6612f1b565b5b600082013567ffffffffffffffff8111156130c5576130c4612f20565b5b6130d184828501613072565b91505092915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126130ff576130fe6130da565b5b8235905067ffffffffffffffff81111561311c5761311b6130df565b5b602083019150836020820283011115613138576131376130e4565b5b9250929050565b6000806020838503121561315657613155612f1b565b5b600083013567ffffffffffffffff81111561317457613173612f20565b5b613180858286016130e9565b92509250509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6131c181612f25565b82525050565b60006131d383836131b8565b60208301905092915050565b6000602082019050919050565b60006131f78261318c565b6132018185613197565b935061320c836131a8565b8060005b8381101561323d57815161322488826131c7565b975061322f836131df565b925050600181019050613210565b5085935050505092915050565b6000602082019050818103600083015261326481846131ec565b905092915050565b60008060006040848603121561328557613284612f1b565b5b600061329386828701612f46565b935050602084013567ffffffffffffffff8111156132b4576132b3612f20565b5b6132c0868287016130e9565b92509250509250925092565b600060e082840312156132e2576132e161306d565b5b81905092915050565b60006020828403121561330157613300612f1b565b5b600082013567ffffffffffffffff81111561331f5761331e612f20565b5b61332b848285016132cc565b91505092915050565b6000806040838503121561334b5761334a612f1b565b5b600061335985828601612f46565b925050602061336a85828601612f46565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061339f82613374565b9050919050565b6133af81613394565b81146133ba57600080fd5b50565b6000813590506133cc816133a6565b92915050565b600080604083850312156133e9576133e8612f1b565b5b60006133f785828601612f46565b9250506020613408858286016133bd565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6006811061347e5761347d61343e565b5b50565b600081905061348f8261346d565b919050565b600061349f82613481565b9050919050565b6134af81613494565b82525050565b600581106134c6576134c561343e565b5b50565b60008190506134d7826134b5565b919050565b60006134e7826134c9565b9050919050565b6134f7816134dc565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60808201600082015161353f60008501826131b8565b50602082015161355260208501826131b8565b50604082015161356560408501826131b8565b50606082015161357860608501826131b8565b50505050565b600061358a8383613529565b60808301905092915050565b6000602082019050919050565b60006135ae826134fd565b6135b88185613508565b93506135c383613519565b8060005b838110156135f45781516135db888261357e565b97506135e683613596565b9250506001810190506135c7565b5085935050505092915050565b61360a81613394565b82525050565b61361981613037565b82525050565b60006101208301600083015161363860008601826131b8565b50602083015161364b60208601826134a6565b50604083015161365e60408601826134ee565b506060830151848203606086015261367682826135a3565b915050608083015161368b6080860182613601565b5060a083015161369e60a08601826131b8565b5060c08301516136b160c08601826131b8565b5060e08301516136c460e0860182613610565b506101008301516136d9610100860182613610565b508091505092915050565b60006136f0838361361f565b905092915050565b6000602082019050919050565b600061371082613412565b61371a818561341d565b93508360208202850161372c8561342e565b8060005b85811015613768578484038952815161374985826136e4565b9450613754836136f8565b925060208a01995050600181019050613730565b50829750879550505050505092915050565b6000604082019050818103600083015261379481856131ec565b905081810360208301526137a88184613705565b90509392505050565b600080600080608085870312156137cb576137ca612f1b565b5b60006137d987828801612f46565b94505060206137ea878288016133bd565b93505060406137fb87828801612f46565b925050606061380c87828801612f46565b91505092959194509250565b6000819050919050565b600061383d61383861383384613374565b613818565b613374565b9050919050565b600061384f82613822565b9050919050565b600061386182613844565b9050919050565b61387181613856565b82525050565b600060208201905061388c6000830184613868565b92915050565b61389b81613037565b81146138a657600080fd5b50565b6000813590506138b881613892565b92915050565b600080604083850312156138d5576138d4612f1b565b5b60006138e385828601612f46565b92505060206138f4858286016138a9565b9150509250929050565b60008083601f840112613914576139136130da565b5b8235905067ffffffffffffffff811115613931576139306130df565b5b60208301915083608082028301111561394d5761394c6130e4565b5b9250929050565b60008060006040848603121561396d5761396c612f1b565b5b600061397b86828701612f46565b935050602084013567ffffffffffffffff81111561399c5761399b612f20565b5b6139a8868287016138fe565b92509250509250925092565b6000608082840312156139ca576139c961306d565b5b81905092915050565b6000608082840312156139e9576139e8612f1b565b5b60006139f7848285016139b4565b91505092915050565b600060a08284031215613a1657613a1561306d565b5b81905092915050565b600060a08284031215613a3557613a34612f1b565b5b6000613a4384828501613a00565b91505092915050565b600061012083016000830151613a6560008601826131b8565b506020830151613a7860208601826134a6565b506040830151613a8b60408601826134ee565b5060608301518482036060860152613aa382826135a3565b9150506080830151613ab86080860182613601565b5060a0830151613acb60a08601826131b8565b5060c0830151613ade60c08601826131b8565b5060e0830151613af160e0860182613610565b50610100830151613b06610100860182613610565b508091505092915050565b60006020820190508181036000830152613b2b8184613a4c565b905092915050565b60008083601f840112613b4957613b486130da565b5b8235905067ffffffffffffffff811115613b6657613b656130df565b5b602083019150836020820283011115613b8257613b816130e4565b5b9250929050565b60008083601f840112613b9f57613b9e6130da565b5b8235905067ffffffffffffffff811115613bbc57613bbb6130df565b5b602083019150836020820283011115613bd857613bd76130e4565b5b9250929050565b600080600080600060608688031215613bfb57613bfa612f1b565b5b6000613c0988828901612f46565b955050602086013567ffffffffffffffff811115613c2a57613c29612f20565b5b613c3688828901613b33565b9450945050604086013567ffffffffffffffff811115613c5957613c58612f20565b5b613c6588828901613b89565b92509250509295509295909350565b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b613cbd82613c74565b810181811067ffffffffffffffff82111715613cdc57613cdb613c85565b5b80604052505050565b6000613cef612f11565b9050613cfb8282613cb4565b919050565b600067ffffffffffffffff821115613d1b57613d1a613c85565b5b602082029050602081019050919050565b6000613d3f613d3a84613d00565b613ce5565b90508083825260208201905060208402830185811115613d6257613d616130e4565b5b835b81811015613d8b5780613d778882612f46565b845260208401935050602081019050613d64565b5050509392505050565b600082601f830112613daa57613da96130da565b5b8135613dba848260208601613d2c565b91505092915050565b600060208284031215613dd957613dd8612f1b565b5b600082013567ffffffffffffffff811115613df757613df6612f20565b5b613e0384828501613d95565b91505092915050565b60006020820190508181036000830152613e268184613705565b905092915050565b60068110613e3b57600080fd5b50565b600081359050613e4d81613e2e565b92915050565b600080600060408486031215613e6c57613e6b612f1b565b5b600084013567ffffffffffffffff811115613e8a57613e89612f20565b5b613e96868287016138fe565b93509350506020613ea986828701613e3e565b9150509250925092565b60008060008060008060808789031215613ed057613ecf612f1b565b5b6000613ede89828a01612f46565b9650506020613eef89828a016133bd565b955050604087013567ffffffffffffffff811115613f1057613f0f612f20565b5b613f1c89828a016130e9565b9450945050606087013567ffffffffffffffff811115613f3f57613f3e612f20565b5b613f4b89828a016130e9565b92509250509295509295509295565b613f6381613394565b82525050565b6000604082019050613f7e6000830185613f5a565b8181036020830152613f9081846131ec565b90509392505050565b60058110613fa657600080fd5b50565b600081359050613fb881613f99565b92915050565b600060208284031215613fd457613fd3612f1b565b5b6000613fe284828501613fa9565b91505092915050565b60006020828403121561400157614000612f1b565b5b600061400f848285016133bd565b91505092915050565b60006020828403121561402e5761402d612f1b565b5b600061403c848285016138a9565b91505092915050565b600080fd5b600080fd5b600080fd5b6000808335600160200384360303811261407157614070614045565b5b80840192508235915067ffffffffffffffff8211156140935761409261404a565b5b6020830192506080820236038313156140af576140ae61404f565b5b509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082825260208201905092915050565b7f50726963696e67206e6f7420666f756e64000000000000000000000000000000600082015250565b600061412d6011836140e6565b9150614138826140f7565b602082019050919050565b6000602082019050818103600083015261415c81614120565b9050919050565b7f496e636f7272656374206c656e67746873000000000000000000000000000000600082015250565b60006141996011836140e6565b91506141a482614163565b602082019050919050565b600060208201905081810360008301526141c88161418c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061420982612f25565b915061421483612f25565b925082820390508181111561422c5761422b6141cf565b5b92915050565b600061423d82612f25565b915061424883612f25565b92508282019050808211156142605761425f6141cf565b5b92915050565b7f4e6f2070726963696e67204944732070726f7669646564000000000000000000600082015250565b600061429c6017836140e6565b91506142a782614266565b602082019050919050565b600060208201905081810360008301526142cb8161428f565b9050919050565b7f50726963696e6720494420616e64207175616e74697479206c656e677468206d60008201527f69736d6174636800000000000000000000000000000000000000000000000000602082015250565b600061432e6027836140e6565b9150614339826142d2565b604082019050919050565b6000602082019050818103600083015261435d81614321565b9050919050565b7f4e6f7420616e2061646d696e206f6620746865206f7267616e697a6174696f6e600082015250565b600061439a6020836140e6565b91506143a582614364565b602082019050919050565b600060208201905081810360008301526143c98161438d565b9050919050565b60006143db82612f25565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361440d5761440c6141cf565b5b600182019050919050565b6000813561442581612f2f565b80915050919050565b60008160001b9050919050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6144678461442e565b9350801983169250808416831791505092915050565b600061449861449361448e84612f25565b613818565b612f25565b9050919050565b6000819050919050565b6144b28261447d565b6144c56144be8261449f565b835461443b565b8255505050565b6000810160008301806144de81614418565b90506144ea81846144a9565b5050506001810160208301806144ff81614418565b905061450b81846144a9565b50505060028101604083018061452081614418565b905061452c81846144a9565b50505060038101606083018061454181614418565b905061454d81846144a9565b5050505050565b61455e82826144cc565b5050565b600081519050614571816133a6565b92915050565b60006020828403121561458d5761458c612f1b565b5b600061459b84828501614562565b91505092915050565b6000815190506145b381613892565b92915050565b6000602082840312156145cf576145ce612f1b565b5b60006145dd848285016145a4565b91505092915050565b7f5573616765206d65746572206e6f7420666f756e640000000000000000000000600082015250565b600061461c6015836140e6565b9150614627826145e6565b602082019050919050565b6000602082019050818103600083015261464b8161460f565b9050919050565b61465b81612fb2565b82525050565b60006020820190506146766000830184614652565b92915050565b60006020820190506146916000830184613f5a565b92915050565b60006040820190506146ac6000830185612f88565b6146b96020830184613f5a565b939250505056fea26469706673582212204778408e83bab2751495c7f3b11ea57a809408172faf1efafa600e672c1d826e64736f6c63430008180033";

type PricingRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PricingRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PricingRegistry__factory extends ContractFactory {
  constructor(...args: PricingRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _contractRegistry: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_contractRegistry, overrides || {});
  }
  override deploy(
    _contractRegistry: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_contractRegistry, overrides || {}) as Promise<
      PricingRegistry & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PricingRegistry__factory {
    return super.connect(runner) as PricingRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PricingRegistryInterface {
    return new Interface(_abi) as PricingRegistryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PricingRegistry {
    return new Contract(address, _abi, runner) as unknown as PricingRegistry;
  }
}
