/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  PricingRegistry,
  PricingRegistryInterface,
} from "../../registry/PricingRegistry";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_contractRegistry",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "GraduatedLowerBoundMustBeZero",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidChargeStyle",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidQuantity",
    type: "error",
  },
  {
    inputs: [],
    name: "LastTierUpperBoundMustBeZeroToRepresentInfinity",
    type: "error",
  },
  {
    inputs: [],
    name: "LowerBoundGreaterThanUpperBound",
    type: "error",
  },
  {
    inputs: [],
    name: "LowerBoundMustBeOneGreaterThanPreviousUpperBound",
    type: "error",
  },
  {
    inputs: [],
    name: "NoTiersFound",
    type: "error",
  },
  {
    inputs: [],
    name: "PricingInactive",
    type: "error",
  },
  {
    inputs: [],
    name: "PricingNotAuthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "PricingRestrictedAccess",
    type: "error",
  },
  {
    inputs: [],
    name: "PricingTokensMismatch",
    type: "error",
  },
  {
    inputs: [],
    name: "RequiresERC20Token",
    type: "error",
  },
  {
    inputs: [],
    name: "RequiresOneTimeOrFlatRateChargeStyle",
    type: "error",
  },
  {
    inputs: [],
    name: "RequiresUsageChargeStyle",
    type: "error",
  },
  {
    inputs: [],
    name: "TokenNotWhitelisted",
    type: "error",
  },
  {
    inputs: [],
    name: "VolumeLowerBoundMustBeOne",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "organizationId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pricingId",
        type: "uint256",
      },
    ],
    name: "PricingCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "organizationId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pricingId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    name: "PricingStatusChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "organizationId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pricingId",
        type: "uint256",
      },
    ],
    name: "PricingUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "organizationId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pricingId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "productPassOwner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isRestricted",
        type: "bool",
      },
    ],
    name: "RestrictedAccessGranted",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "organizationId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "flatPrice",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "enum PricingUtils.ChargeFrequency",
            name: "chargeFrequency",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "isRestricted",
            type: "bool",
          },
        ],
        internalType:
          "struct IPricingRegistry.CreateFlatRateSubscriptionParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "createFlatRateSubscriptionPricing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "organizationId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "flatPrice",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "bool",
            name: "isRestricted",
            type: "bool",
          },
        ],
        internalType: "struct IPricingRegistry.CreateOneTimeParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "createOneTimePricing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "organizationId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "enum PricingUtils.ChargeFrequency",
            name: "chargeFrequency",
            type: "uint8",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "lowerBound",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "upperBound",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "pricePerUnit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "priceFlatRate",
                type: "uint256",
              },
            ],
            internalType: "struct PricingUtils.PricingTier[]",
            name: "tiers",
            type: "tuple[]",
          },
          {
            internalType: "bool",
            name: "isVolume",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isRestricted",
            type: "bool",
          },
        ],
        internalType: "struct IPricingRegistry.CreateTieredSubscriptionParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "createTieredSubscriptionPricing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "organizationId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "enum PricingUtils.ChargeFrequency",
            name: "chargeFrequency",
            type: "uint8",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "lowerBound",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "upperBound",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "pricePerUnit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "priceFlatRate",
                type: "uint256",
              },
            ],
            internalType: "struct PricingUtils.PricingTier[]",
            name: "tiers",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "usageMeterId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isVolume",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isRestricted",
            type: "bool",
          },
        ],
        internalType:
          "struct IPricingRegistry.CreateUsageBasedSubscriptionParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "createUsageBasedSubscriptionPricing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum PricingUtils.ChargeFrequency",
        name: "chargeFrequency",
        type: "uint8",
      },
    ],
    name: "getChargeFrequencyCycleDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pricingId",
        type: "uint256",
      },
    ],
    name: "getCycleDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_pricingIds",
        type: "uint256[]",
      },
    ],
    name: "getCycleDurationBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "cycleDurations",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "organizationId",
        type: "uint256",
      },
    ],
    name: "getOrgPricing",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "orgId",
            type: "uint256",
          },
          {
            internalType: "enum PricingUtils.ChargeStyle",
            name: "chargeStyle",
            type: "uint8",
          },
          {
            internalType: "enum PricingUtils.ChargeFrequency",
            name: "chargeFrequency",
            type: "uint8",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "lowerBound",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "upperBound",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "pricePerUnit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "priceFlatRate",
                type: "uint256",
              },
            ],
            internalType: "struct PricingUtils.PricingTier[]",
            name: "tiers",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "flatPrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "usageMeterId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isActive",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isRestricted",
            type: "bool",
          },
        ],
        internalType: "struct PricingUtils.Pricing[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "organizationId",
        type: "uint256",
      },
    ],
    name: "getOrgPricingIds",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pricingId",
        type: "uint256",
      },
    ],
    name: "getPricing",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "orgId",
            type: "uint256",
          },
          {
            internalType: "enum PricingUtils.ChargeStyle",
            name: "chargeStyle",
            type: "uint8",
          },
          {
            internalType: "enum PricingUtils.ChargeFrequency",
            name: "chargeFrequency",
            type: "uint8",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "lowerBound",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "upperBound",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "pricePerUnit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "priceFlatRate",
                type: "uint256",
              },
            ],
            internalType: "struct PricingUtils.PricingTier[]",
            name: "tiers",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "flatPrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "usageMeterId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isActive",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isRestricted",
            type: "bool",
          },
        ],
        internalType: "struct PricingUtils.Pricing",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_pricingIds",
        type: "uint256[]",
      },
    ],
    name: "getPricingBatch",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "orgId",
            type: "uint256",
          },
          {
            internalType: "enum PricingUtils.ChargeStyle",
            name: "chargeStyle",
            type: "uint8",
          },
          {
            internalType: "enum PricingUtils.ChargeFrequency",
            name: "chargeFrequency",
            type: "uint8",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "lowerBound",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "upperBound",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "pricePerUnit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "priceFlatRate",
                type: "uint256",
              },
            ],
            internalType: "struct PricingUtils.PricingTier[]",
            name: "tiers",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "flatPrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "usageMeterId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isActive",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isRestricted",
            type: "bool",
          },
        ],
        internalType: "struct PricingUtils.Pricing[]",
        name: "_pricing",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pricingSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "contract IContractRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "restrictedAccess",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pricingId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    name: "setPricingActive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pricingId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "flatPrice",
        type: "uint256",
      },
    ],
    name: "setPricingFlatPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pricingId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isRestricted",
        type: "bool",
      },
    ],
    name: "setPricingRestricted",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pricingId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "lowerBound",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "upperBound",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "pricePerUnit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "priceFlatRate",
            type: "uint256",
          },
        ],
        internalType: "struct PricingUtils.PricingTier[]",
        name: "tiers",
        type: "tuple[]",
      },
    ],
    name: "setPricingTiers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pricingId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "setPricingToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pricingId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "usageMeterId",
        type: "uint256",
      },
    ],
    name: "setPricingUsageMeterId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pricingId",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "productPassOwners",
        type: "address[]",
      },
      {
        internalType: "bool[]",
        name: "isRestricted",
        type: "bool[]",
      },
    ],
    name: "setRestrictedAccess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_organizationId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_productPassOwner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_pricingId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_quantity",
        type: "uint256",
      },
    ],
    name: "validateCheckout",
    outputs: [
      {
        internalType: "uint256",
        name: "cycleDuration",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_organizationId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_productPassOwner",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_pricingIds",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_quantities",
        type: "uint256[]",
      },
    ],
    name: "validateCheckoutBatch",
    outputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "cycleDurations",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_organizationId",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_pricingIds",
        type: "uint256[]",
      },
    ],
    name: "validateOrgPricing",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "lowerBound",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "upperBound",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "pricePerUnit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "priceFlatRate",
            type: "uint256",
          },
        ],
        internalType: "struct PricingUtils.PricingTier[]",
        name: "tiers",
        type: "tuple[]",
      },
      {
        internalType: "enum PricingUtils.ChargeStyle",
        name: "chargeStyle",
        type: "uint8",
      },
    ],
    name: "validateTiers",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162004813380380620048138339818101604052810190620000379190620000ea565b80806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506200011c565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000b28262000085565b9050919050565b620000c481620000a5565b8114620000d057600080fd5b50565b600081519050620000e481620000b9565b92915050565b60006020828403121562000103576200010262000080565b5b60006200011384828501620000d3565b91505092915050565b6146e7806200012c6000396000f3fe608060405234801561001057600080fd5b506004361061018d5760003560e01c80637b103999116100de578063c12f1a4211610097578063d4ca8b7011610071578063d4ca8b701461049f578063daa0a961146104cf578063f332f2bc146104eb578063f3ef32cf1461051c5761018d565b8063c12f1a4214610437578063c4e99fd114610467578063cd9d0ac7146104835761018d565b80637b1039991461038d5780638d0465c3146103ab578063983e59d3146103c7578063a9a07fab146103e3578063be2910ea146103ff578063bf1d2beb1461041b5761018d565b806335eae1841161014b5780633b81b594116101255780633b81b594146102cc57806346fd6e06146102fc5780635149f44e1461032c578063692555ec1461035d5761018d565b806335eae184146102785780633686d36d146102945780633b53e2d6146102b05761018d565b80620e72c71461019257806301ffc9a7146101c25780630c6509ab146101f2578063285291c61461020e57806328bcbac61461022c578063302f43ea1461025c575b600080fd5b6101ac60048036038101906101a79190612f4c565b61054c565b6040516101b99190612f88565b60405180910390f35b6101dc60048036038101906101d79190612ffb565b610566565b6040516101e99190613043565b60405180910390f35b61020c60048036038101906102079190613082565b610638565b005b610216610700565b6040516102239190612f88565b60405180910390f35b61024660048036038101906102419190613130565b610706565b604051610253919061323b565b60405180910390f35b6102766004803603810190610271919061325d565b6107c1565b005b610292600480360381019061028d91906132dc565b610856565b005b6102ae60048036038101906102a99190613325565b61092e565b005b6102ca60048036038101906102c59190613325565b610a89565b005b6102e660048036038101906102e191906133c3565b610afc565b6040516102f39190613043565b60405180910390f35b61031660048036038101906103119190612f4c565b610b2b565b604051610323919061323b565b60405180910390f35b61034660048036038101906103419190612f4c565b610b4f565b60405161035492919061376b565b60405180910390f35b610377600480360381019061037291906137a2565b610b85565b6040516103849190612f88565b60405180910390f35b610395611124565b6040516103a29190613868565b60405180910390f35b6103c560048036038101906103c091906138af565b611148565b005b6103e160048036038101906103dc9190613945565b6111df565b005b6103fd60048036038101906103f891906139c4565b611254565b005b610419600480360381019061041491906138af565b6112f1565b005b61043560048036038101906104309190613a10565b611393565b005b610451600480360381019061044c9190612f4c565b611442565b60405161045e9190613b02565b60405180910390f35b610481600480360381019061047c91906133c3565b611668565b005b61049d60048036038101906104989190613bd0565b6116e1565b005b6104b960048036038101906104b49190613db4565b6118e6565b6040516104c69190613dfd565b60405180910390f35b6104e960048036038101906104e49190613e44565b61199f565b005b61050560048036038101906105009190613ea4565b611d19565b604051610513929190613f5a565b60405180910390f35b61053660048036038101906105319190613faf565b611f84565b6040516105439190612f88565b60405180910390f35b600061055f61055a83611442565b61206e565b9050919050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061063157507f3ac7ac05000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b8060000135610646816120bd565b6106ad82600001358360200160208101906106619190613fdc565b8460800160208101906106749190614009565b61067f576003610682565b60025b8560400160208101906106959190613faf565b8660a00160208101906106a89190614009565b612108565b6106c86036548380606001906106c39190614045565b61220d565b60365482600001357f7e1c1cdde81911cdb2eb97737e2f9d629b2749aa948c3cbecf6d494576c08b1b60405160405180910390a35050565b60365481565b60608282905067ffffffffffffffff81111561072557610724613c76565b5b6040519080825280602002602001820160405280156107535781602001602082028036833780820191505090505b50905060005b838390508110156107ba5761078e61078985858481811061077d5761077c6140a8565b5b90506020020135611442565b61206e565b8282815181106107a1576107a06140a8565b5b6020026020010181815250508080600101915050610759565b5092915050565b60005b828290508110156108505761080d8383838181106107e5576107e46140a8565b5b90506020020135603360008781526020019081526020016000206122e490919063ffffffff16565b610843576040517fa6199ccd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80806001019150506107c4565b50505050565b8060000135610864816120bd565b6108cb826000013583602001602081019061087f9190613fdc565b8460a00160208101906108929190614009565b61089d5760056108a0565b60045b8560400160208101906108b39190613faf565b8660c00160208101906108c69190614009565b612108565b6108e66036548380606001906108e19190614045565b61220d565b6108f660365483608001356122fe565b60365482600001357f7e1c1cdde81911cdb2eb97737e2f9d629b2749aa948c3cbecf6d494576c08b1b60405160405180910390a35050565b603460008381526020019081526020016000206000015461094e816120bd565b600060058111156109625761096161342f565b5b6034600085815260200190815260200160002060010160009054906101000a900460ff1660058111156109985761099761342f565b5b141580156109ee5750600160058111156109b5576109b461342f565b5b6034600085815260200190815260200160002060010160009054906101000a900460ff1660058111156109eb576109ea61342f565b5b14155b15610a25576040517f90be07d400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8160346000858152602001908152602001600020600401819055508260346000858152602001908152602001600020600001547f335f5afc83fe8c5a011a96dc39bcce9fb9d46fb5986502f7040e76e28b03612360405160405180910390a3505050565b6034600083815260200190815260200160002060000154610aa9816120bd565b610ab383836122fe565b8260346000858152602001908152602001600020600001547f335f5afc83fe8c5a011a96dc39bcce9fb9d46fb5986502f7040e76e28b03612360405160405180910390a3505050565b60356020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b6060610b4860336000848152602001908152602001600020612668565b9050919050565b6060806000610b6f60336000868152602001908152602001600020612668565b905080610b7b826118e6565b9250925050915091565b6000610bac83603360008881526020019081526020016000206122e490919063ffffffff16565b610be2576040517fa6199ccd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6034600084815260200190815260200160002060060160009054906101000a900460ff16610c3c576040517f9d3580cc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6034600084815260200190815260200160002060060160019054906101000a900460ff168015610cc757506035600084815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16155b15610cfe576040517f5fba433900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610ecc6034600085815260200190815260200160002060405180610120016040529081600082015481526020016001820160009054906101000a900460ff166005811115610d4f57610d4e61342f565b5b6005811115610d6157610d6061342f565b5b81526020016001820160019054906101000a900460ff166004811115610d8a57610d8961342f565b5b6004811115610d9c57610d9b61342f565b5b815260200160028201805480602002602001604051908101604052809291908181526020016000905b82821015610e1f578382906000526020600020906004020160405180608001604052908160008201548152602001600182015481526020016002820154815260200160038201548152505081526020019060010190610dc5565b5050505081526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160048201548152602001600582015481526020016006820160009054906101000a900460ff161515151581526020016006820160019054906101000a900460ff161515151581525050612689565b15610f105760008203610f0b576040517f524f409b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610f4c565b6000821115610f4b576040517f524f409b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b61111a6034600085815260200190815260200160002060405180610120016040529081600082015481526020016001820160009054906101000a900460ff166005811115610f9d57610f9c61342f565b5b6005811115610faf57610fae61342f565b5b81526020016001820160019054906101000a900460ff166004811115610fd857610fd761342f565b5b6004811115610fea57610fe961342f565b5b815260200160028201805480602002602001604051908101604052809291908181526020016000905b8282101561106d578382906000526020600020906004020160405180608001604052908160008201548152602001600182015481526020016002820154815260200160038201548152505081526020019060010190611013565b5050505081526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160048201548152602001600582015481526020016006820160009054906101000a900460ff161515151581526020016006820160019054906101000a900460ff16151515158152505061206e565b9050949350505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6034600083815260200190815260200160002060000154611168816120bd565b816034600085815260200190815260200160002060060160016101000a81548160ff0219169083151502179055508260346000858152602001908152602001600020600001547f335f5afc83fe8c5a011a96dc39bcce9fb9d46fb5986502f7040e76e28b03612360405160405180910390a3505050565b60346000848152602001908152602001600020600001546111ff816120bd565b61120a84848461220d565b8360346000868152602001908152602001600020600001547f335f5afc83fe8c5a011a96dc39bcce9fb9d46fb5986502f7040e76e28b03612360405160405180910390a350505050565b8060000135611262816120bd565b611298826000013583604001602081019061127d9190613fdc565b6000808660600160208101906112939190614009565b612108565b81602001356034600060365481526020019081526020016000206004018190555060365482600001357f7e1c1cdde81911cdb2eb97737e2f9d629b2749aa948c3cbecf6d494576c08b1b60405160405180910390a35050565b6034600083815260200190815260200160002060000154611311816120bd565b816034600085815260200190815260200160002060060160006101000a81548160ff0219169083151502179055508260346000858152602001908152602001600020600001547f435c10dc1748d4f29b821eb3bfa0f2d8c38cf3b74cea15a28a6e6fdb0a413a49846040516113869190613043565b60405180910390a3505050565b80600001356113a1816120bd565b6113e982600001358360400160208101906113bc9190613fdc565b60018560600160208101906113d19190613faf565b8660800160208101906113e49190614009565b612108565b81602001356034600060365481526020019081526020016000206004018190555060365482600001357f7e1c1cdde81911cdb2eb97737e2f9d629b2749aa948c3cbecf6d494576c08b1b60405160405180910390a35050565b61144a612e1d565b60008211801561145c57506036548211155b61149b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161149290614134565b60405180910390fd5b6034600083815260200190815260200160002060405180610120016040529081600082015481526020016001820160009054906101000a900460ff1660058111156114e9576114e861342f565b5b60058111156114fb576114fa61342f565b5b81526020016001820160019054906101000a900460ff1660048111156115245761152361342f565b5b60048111156115365761153561342f565b5b815260200160028201805480602002602001604051908101604052809291908181526020016000905b828210156115b957838290600052602060002090600402016040518060800160405290816000820154815260200160018201548152602001600282015481526020016003820154815250508152602001906001019061155f565b5050505081526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160048201548152602001600582015481526020016006820160009054906101000a900460ff161515151581526020016006820160019054906101000a900460ff1615151515815250509050919050565b6034600083815260200190815260200160002060000154611688816120bd565b60006034600085815260200190815260200160002090506116a981846126f1565b8381600001547f335f5afc83fe8c5a011a96dc39bcce9fb9d46fb5986502f7040e76e28b03612360405160405180910390a350505050565b6034600086815260200190815260200160002060000154611701816120bd565b60008585905011801561171957508282905085859050145b611758576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161174f906141a0565b60405180910390fd5b60005b858590508110156118dd57838382818110611779576117786140a8565b5b905060200201602081019061178e9190614009565b6035600089815260200190815260200160002060008888858181106117b6576117b56140a8565b5b90506020020160208101906117cb9190613fdc565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555085858281811061182f5761182e6140a8565b5b90506020020160208101906118449190613fdc565b73ffffffffffffffffffffffffffffffffffffffff1687603460008a8152602001908152602001600020600001547f103806997e4b32b4ec41cd6bd35e679ce9e65eeeb69fa41e95383bf271ce00498787868181106118a6576118a56140a8565b5b90506020020160208101906118bb9190614009565b6040516118c89190613043565b60405180910390a4808060010191505061175b565b50505050505050565b6060815167ffffffffffffffff81111561190357611902613c76565b5b60405190808252806020026020018201604052801561193c57816020015b611929612e1d565b8152602001906001900390816119215790505b50905060005b82518110156119995761196e838281518110611961576119606140a8565b5b6020026020010151611442565b828281518110611981576119806140a8565b5b60200260200101819052508080600101915050611942565b50919050565b600083839050036119dc576040517f4e5d546100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600260058111156119f0576119ef61342f565b5b816005811115611a0357611a0261342f565b5b1480611a33575060046005811115611a1e57611a1d61342f565b5b816005811115611a3157611a3061342f565b5b145b15611a9457600183836000818110611a4e57611a4d6140a8565b5b9050608002016000013514611a8f576040517f014fbd5200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611b7e565b60036005811115611aa857611aa761342f565b5b816005811115611abb57611aba61342f565b5b1480611aea5750600580811115611ad557611ad461342f565b5b816005811115611ae857611ae761342f565b5b145b15611b4b57600083836000818110611b0557611b046140a8565b5b9050608002016000013514611b46576040517fda63d74000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611b7d565b6040517ffe038ba200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b60005b83839050811015611d1357600081118015611bec575060018484600184611ba891906141ef565b818110611bb857611bb76140a8565b5b90506080020160200135611bcc9190614223565b848483818110611bdf57611bde6140a8565b5b9050608002016000013514155b15611c23576040517f9876f0e300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600184849050611c3391906141ef565b8103611c94576000848483818110611c4e57611c4d6140a8565b5b9050608002016020013514611c8f576040517f507b144500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611d13565b838382818110611ca757611ca66140a8565b5b90506080020160200135848483818110611cc457611cc36140a8565b5b905060800201600001351115611d06576040517f75d1413b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8080600101915050611b81565b50505050565b6000606060008686905011611d63576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d5a906142a3565b60405180910390fd5b838390508686905014611dab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611da290614335565b60405180910390fd5b6034600087876000818110611dc357611dc26140a8565b5b90506020020135815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691508585905067ffffffffffffffff811115611e1b57611e1a613c76565b5b604051908082528060200260200182016040528015611e495781602001602082028036833780820191505090505b50905060005b86869050811015611f7857611e988989898985818110611e7257611e716140a8565b5b90506020020135888886818110611e8c57611e8b6140a8565b5b90506020020135610b85565b828281518110611eab57611eaa6140a8565b5b6020026020010181815250508273ffffffffffffffffffffffffffffffffffffffff1660346000898985818110611ee557611ee46140a8565b5b90506020020135815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611f6b576040517f5ea04bbc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8080600101915050611e4f565b50965096945050505050565b6000806004811115611f9957611f9861342f565b5b826004811115611fac57611fab61342f565b5b03611fbc57620151809050612069565b60016004811115611fd057611fcf61342f565b5b826004811115611fe357611fe261342f565b5b03611ff35762093a809050612069565b600260048111156120075761200661342f565b5b82600481111561201a5761201961342f565b5b0361202a5762278d009050612069565b6003600481111561203e5761203d61342f565b5b8260048111156120515761205061342f565b5b03612061576276a7009050612069565b6301e1338090505b919050565b60008060058111156120835761208261342f565b5b8260200151600581111561209a5761209961342f565b5b036120a857600090506120b8565b6120b58260400151611f84565b90505b919050565b6120c681612a22565b612105576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120fc906143a1565b60405180910390fd5b50565b6036600081548092919061211b906143c1565b919050555060006034600060365481526020019081526020016000209050858160000181905550838160010160006101000a81548160ff021916908360058111156121695761216861342f565b5b0217905550828160010160016101000a81548160ff021916908360048111156121955761219461342f565b5b0217905550818160060160016101000a81548160ff02191690831515021790555060018160060160006101000a81548160ff0219169083151502179055506121dd81866126f1565b61220460365460336000898152602001908152602001600020612b4c90919063ffffffff16565b50505050505050565b61223b82826034600087815260200190815260200160002060010160009054906101000a900460ff1661199f565b60346000848152602001908152602001600020600201600061225d9190612ea7565b60005b828290508110156122de5760346000858152602001908152602001600020600201838383818110612294576122936140a8565b5b905060800201908060018154018082558091505060019003906000526020600020906004020160009091909190915081816122cf9190614545565b50508080600101915050612260565b50505050565b60006122f6836000018360001b612b66565b905092915050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166365f136736040518163ffffffff1660e01b8152600401602060405180830381865afa158015612369573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061238d9190614568565b73ffffffffffffffffffffffffffffffffffffffff1663c14ed615826040518263ffffffff1660e01b81526004016123c59190612f88565b602060405180830381865afa1580156123e2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061240691906145aa565b612445576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161243c90614623565b60405180910390fd5b6126136034600084815260200190815260200160002060405180610120016040529081600082015481526020016001820160009054906101000a900460ff1660058111156124965761249561342f565b5b60058111156124a8576124a761342f565b5b81526020016001820160019054906101000a900460ff1660048111156124d1576124d061342f565b5b60048111156124e3576124e261342f565b5b815260200160028201805480602002602001604051908101604052809291908181526020016000905b8282101561256657838290600052602060002090600402016040518060800160405290816000820154815260200160018201548152602001600282015481526020016003820154815250508152602001906001019061250c565b5050505081526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160048201548152602001600582015481526020016006820160009054906101000a900460ff161515151581526020016006820160019054906101000a900460ff161515151581525050612b89565b612649576040517f3364cca000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060346000848152602001908152602001600020600501819055505050565b6060600061267883600001612bf0565b905060608190508092505050919050565b60006002600581111561269f5761269e61342f565b5b826020015160058111156126b6576126b561342f565b5b14806126ea5750600360058111156126d1576126d061342f565b5b826020015160058111156126e8576126e761342f565b5b145b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614801561276357506000600581111561273c5761273b61342f565b5b8260010160009054906101000a900460ff1660058111156127605761275f61342f565b5b14155b15612799576040517edd48a600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146129db578073ffffffffffffffffffffffffffffffffffffffff166301ffc9a77f36372b07000000000000000000000000000000000000000000000000000000006040518263ffffffff1660e01b81526004016128269190614652565b602060405180830381865afa158015612843573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061286791906145aa565b61289c576040517edd48a600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a292f7d36040518163ffffffff1660e01b8152600401602060405180830381865afa158015612907573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061292b9190614568565b73ffffffffffffffffffffffffffffffffffffffff1663daf9c210826040518263ffffffff1660e01b8152600401612963919061466d565b602060405180830381865afa158015612980573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129a491906145aa565b6129da576040517ff84835a000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b808260030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6000612a2d82612c4c565b80612b45575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663595439736040518163ffffffff1660e01b8152600401602060405180830381865afa158015612a9e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ac29190614568565b73ffffffffffffffffffffffffffffffffffffffff1663146a291183612ae6612c93565b6040518363ffffffff1660e01b8152600401612b03929190614688565b602060405180830381865afa158015612b20573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b4491906145aa565b5b9050919050565b6000612b5e836000018360001b612c9b565b905092915050565b600080836001016000848152602001908152602001600020541415905092915050565b600060046005811115612b9f57612b9e61342f565b5b82602001516005811115612bb657612bb561342f565b5b1480612be95750600580811115612bd057612bcf61342f565b5b82602001516005811115612be757612be661342f565b5b145b9050919050565b606081600001805480602002602001604051908101604052809291908181526020018280548015612c4057602002820191906000526020600020905b815481526020019060010190808311612c2c575b50505050509050919050565b6000612c56612c93565b73ffffffffffffffffffffffffffffffffffffffff16612c7583612d0b565b73ffffffffffffffffffffffffffffffffffffffff16149050919050565b600033905090565b6000612ca78383612b66565b612d00578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050612d05565b600090505b92915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cfd8fe0c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612d79573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d9d9190614568565b73ffffffffffffffffffffffffffffffffffffffff16636352211e836040518263ffffffff1660e01b8152600401612dd59190612f88565b602060405180830381865afa158015612df2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e169190614568565b9050919050565b6040518061012001604052806000815260200160006005811115612e4457612e4361342f565b5b815260200160006004811115612e5d57612e5c61342f565b5b815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081526020016000151581526020016000151581525090565b5080546000825560040290600052602060002090810190612ec89190612ecb565b50565b5b80821115612efe5760008082016000905560018201600090556002820160009055600382016000905550600401612ecc565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b612f2981612f16565b8114612f3457600080fd5b50565b600081359050612f4681612f20565b92915050565b600060208284031215612f6257612f61612f0c565b5b6000612f7084828501612f37565b91505092915050565b612f8281612f16565b82525050565b6000602082019050612f9d6000830184612f79565b92915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b612fd881612fa3565b8114612fe357600080fd5b50565b600081359050612ff581612fcf565b92915050565b60006020828403121561301157613010612f0c565b5b600061301f84828501612fe6565b91505092915050565b60008115159050919050565b61303d81613028565b82525050565b60006020820190506130586000830184613034565b92915050565b600080fd5b600060c082840312156130795761307861305e565b5b81905092915050565b60006020828403121561309857613097612f0c565b5b600082013567ffffffffffffffff8111156130b6576130b5612f11565b5b6130c284828501613063565b91505092915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126130f0576130ef6130cb565b5b8235905067ffffffffffffffff81111561310d5761310c6130d0565b5b602083019150836020820283011115613129576131286130d5565b5b9250929050565b6000806020838503121561314757613146612f0c565b5b600083013567ffffffffffffffff81111561316557613164612f11565b5b613171858286016130da565b92509250509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6131b281612f16565b82525050565b60006131c483836131a9565b60208301905092915050565b6000602082019050919050565b60006131e88261317d565b6131f28185613188565b93506131fd83613199565b8060005b8381101561322e57815161321588826131b8565b9750613220836131d0565b925050600181019050613201565b5085935050505092915050565b6000602082019050818103600083015261325581846131dd565b905092915050565b60008060006040848603121561327657613275612f0c565b5b600061328486828701612f37565b935050602084013567ffffffffffffffff8111156132a5576132a4612f11565b5b6132b1868287016130da565b92509250509250925092565b600060e082840312156132d3576132d261305e565b5b81905092915050565b6000602082840312156132f2576132f1612f0c565b5b600082013567ffffffffffffffff8111156133105761330f612f11565b5b61331c848285016132bd565b91505092915050565b6000806040838503121561333c5761333b612f0c565b5b600061334a85828601612f37565b925050602061335b85828601612f37565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061339082613365565b9050919050565b6133a081613385565b81146133ab57600080fd5b50565b6000813590506133bd81613397565b92915050565b600080604083850312156133da576133d9612f0c565b5b60006133e885828601612f37565b92505060206133f9858286016133ae565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6006811061346f5761346e61342f565b5b50565b60008190506134808261345e565b919050565b600061349082613472565b9050919050565b6134a081613485565b82525050565b600581106134b7576134b661342f565b5b50565b60008190506134c8826134a6565b919050565b60006134d8826134ba565b9050919050565b6134e8816134cd565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60808201600082015161353060008501826131a9565b50602082015161354360208501826131a9565b50604082015161355660408501826131a9565b50606082015161356960608501826131a9565b50505050565b600061357b838361351a565b60808301905092915050565b6000602082019050919050565b600061359f826134ee565b6135a981856134f9565b93506135b48361350a565b8060005b838110156135e55781516135cc888261356f565b97506135d783613587565b9250506001810190506135b8565b5085935050505092915050565b6135fb81613385565b82525050565b61360a81613028565b82525050565b60006101208301600083015161362960008601826131a9565b50602083015161363c6020860182613497565b50604083015161364f60408601826134df565b50606083015184820360608601526136678282613594565b915050608083015161367c60808601826135f2565b5060a083015161368f60a08601826131a9565b5060c08301516136a260c08601826131a9565b5060e08301516136b560e0860182613601565b506101008301516136ca610100860182613601565b508091505092915050565b60006136e18383613610565b905092915050565b6000602082019050919050565b600061370182613403565b61370b818561340e565b93508360208202850161371d8561341f565b8060005b85811015613759578484038952815161373a85826136d5565b9450613745836136e9565b925060208a01995050600181019050613721565b50829750879550505050505092915050565b6000604082019050818103600083015261378581856131dd565b9050818103602083015261379981846136f6565b90509392505050565b600080600080608085870312156137bc576137bb612f0c565b5b60006137ca87828801612f37565b94505060206137db878288016133ae565b93505060406137ec87828801612f37565b92505060606137fd87828801612f37565b91505092959194509250565b6000819050919050565b600061382e61382961382484613365565b613809565b613365565b9050919050565b600061384082613813565b9050919050565b600061385282613835565b9050919050565b61386281613847565b82525050565b600060208201905061387d6000830184613859565b92915050565b61388c81613028565b811461389757600080fd5b50565b6000813590506138a981613883565b92915050565b600080604083850312156138c6576138c5612f0c565b5b60006138d485828601612f37565b92505060206138e58582860161389a565b9150509250929050565b60008083601f840112613905576139046130cb565b5b8235905067ffffffffffffffff811115613922576139216130d0565b5b60208301915083608082028301111561393e5761393d6130d5565b5b9250929050565b60008060006040848603121561395e5761395d612f0c565b5b600061396c86828701612f37565b935050602084013567ffffffffffffffff81111561398d5761398c612f11565b5b613999868287016138ef565b92509250509250925092565b6000608082840312156139bb576139ba61305e565b5b81905092915050565b6000608082840312156139da576139d9612f0c565b5b60006139e8848285016139a5565b91505092915050565b600060a08284031215613a0757613a0661305e565b5b81905092915050565b600060a08284031215613a2657613a25612f0c565b5b6000613a34848285016139f1565b91505092915050565b600061012083016000830151613a5660008601826131a9565b506020830151613a696020860182613497565b506040830151613a7c60408601826134df565b5060608301518482036060860152613a948282613594565b9150506080830151613aa960808601826135f2565b5060a0830151613abc60a08601826131a9565b5060c0830151613acf60c08601826131a9565b5060e0830151613ae260e0860182613601565b50610100830151613af7610100860182613601565b508091505092915050565b60006020820190508181036000830152613b1c8184613a3d565b905092915050565b60008083601f840112613b3a57613b396130cb565b5b8235905067ffffffffffffffff811115613b5757613b566130d0565b5b602083019150836020820283011115613b7357613b726130d5565b5b9250929050565b60008083601f840112613b9057613b8f6130cb565b5b8235905067ffffffffffffffff811115613bad57613bac6130d0565b5b602083019150836020820283011115613bc957613bc86130d5565b5b9250929050565b600080600080600060608688031215613bec57613beb612f0c565b5b6000613bfa88828901612f37565b955050602086013567ffffffffffffffff811115613c1b57613c1a612f11565b5b613c2788828901613b24565b9450945050604086013567ffffffffffffffff811115613c4a57613c49612f11565b5b613c5688828901613b7a565b92509250509295509295909350565b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b613cae82613c65565b810181811067ffffffffffffffff82111715613ccd57613ccc613c76565b5b80604052505050565b6000613ce0612f02565b9050613cec8282613ca5565b919050565b600067ffffffffffffffff821115613d0c57613d0b613c76565b5b602082029050602081019050919050565b6000613d30613d2b84613cf1565b613cd6565b90508083825260208201905060208402830185811115613d5357613d526130d5565b5b835b81811015613d7c5780613d688882612f37565b845260208401935050602081019050613d55565b5050509392505050565b600082601f830112613d9b57613d9a6130cb565b5b8135613dab848260208601613d1d565b91505092915050565b600060208284031215613dca57613dc9612f0c565b5b600082013567ffffffffffffffff811115613de857613de7612f11565b5b613df484828501613d86565b91505092915050565b60006020820190508181036000830152613e1781846136f6565b905092915050565b60068110613e2c57600080fd5b50565b600081359050613e3e81613e1f565b92915050565b600080600060408486031215613e5d57613e5c612f0c565b5b600084013567ffffffffffffffff811115613e7b57613e7a612f11565b5b613e87868287016138ef565b93509350506020613e9a86828701613e2f565b9150509250925092565b60008060008060008060808789031215613ec157613ec0612f0c565b5b6000613ecf89828a01612f37565b9650506020613ee089828a016133ae565b955050604087013567ffffffffffffffff811115613f0157613f00612f11565b5b613f0d89828a016130da565b9450945050606087013567ffffffffffffffff811115613f3057613f2f612f11565b5b613f3c89828a016130da565b92509250509295509295509295565b613f5481613385565b82525050565b6000604082019050613f6f6000830185613f4b565b8181036020830152613f8181846131dd565b90509392505050565b60058110613f9757600080fd5b50565b600081359050613fa981613f8a565b92915050565b600060208284031215613fc557613fc4612f0c565b5b6000613fd384828501613f9a565b91505092915050565b600060208284031215613ff257613ff1612f0c565b5b6000614000848285016133ae565b91505092915050565b60006020828403121561401f5761401e612f0c565b5b600061402d8482850161389a565b91505092915050565b600080fd5b600080fd5b600080fd5b6000808335600160200384360303811261406257614061614036565b5b80840192508235915067ffffffffffffffff8211156140845761408361403b565b5b6020830192506080820236038313156140a05761409f614040565b5b509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082825260208201905092915050565b7f50726963696e67206e6f7420666f756e64000000000000000000000000000000600082015250565b600061411e6011836140d7565b9150614129826140e8565b602082019050919050565b6000602082019050818103600083015261414d81614111565b9050919050565b7f496e636f7272656374206c656e67746873000000000000000000000000000000600082015250565b600061418a6011836140d7565b915061419582614154565b602082019050919050565b600060208201905081810360008301526141b98161417d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006141fa82612f16565b915061420583612f16565b925082820390508181111561421d5761421c6141c0565b5b92915050565b600061422e82612f16565b915061423983612f16565b9250828201905080821115614251576142506141c0565b5b92915050565b7f4e6f2070726963696e67204944732070726f7669646564000000000000000000600082015250565b600061428d6017836140d7565b915061429882614257565b602082019050919050565b600060208201905081810360008301526142bc81614280565b9050919050565b7f50726963696e6720494420616e64207175616e74697479206c656e677468206d60008201527f69736d6174636800000000000000000000000000000000000000000000000000602082015250565b600061431f6027836140d7565b915061432a826142c3565b604082019050919050565b6000602082019050818103600083015261434e81614312565b9050919050565b7f4e6f7420616e2061646d696e206f6620746865206f7267616e697a6174696f6e600082015250565b600061438b6020836140d7565b915061439682614355565b602082019050919050565b600060208201905081810360008301526143ba8161437e565b9050919050565b60006143cc82612f16565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036143fe576143fd6141c0565b5b600182019050919050565b6000813561441681612f20565b80915050919050565b60008160001b9050919050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6144588461441f565b9350801983169250808416831791505092915050565b600061448961448461447f84612f16565b613809565b612f16565b9050919050565b6000819050919050565b6144a38261446e565b6144b66144af82614490565b835461442c565b8255505050565b6000810160008301806144cf81614409565b90506144db818461449a565b5050506001810160208301806144f081614409565b90506144fc818461449a565b50505060028101604083018061451181614409565b905061451d818461449a565b50505060038101606083018061453281614409565b905061453e818461449a565b5050505050565b61454f82826144bd565b5050565b60008151905061456281613397565b92915050565b60006020828403121561457e5761457d612f0c565b5b600061458c84828501614553565b91505092915050565b6000815190506145a481613883565b92915050565b6000602082840312156145c0576145bf612f0c565b5b60006145ce84828501614595565b91505092915050565b7f5573616765206d65746572206e6f7420666f756e640000000000000000000000600082015250565b600061460d6015836140d7565b9150614618826145d7565b602082019050919050565b6000602082019050818103600083015261463c81614600565b9050919050565b61464c81612fa3565b82525050565b60006020820190506146676000830184614643565b92915050565b60006020820190506146826000830184613f4b565b92915050565b600060408201905061469d6000830185612f79565b6146aa6020830184613f4b565b939250505056fea2646970667358221220f7655db1ce4be9107a796d9ae2178220762cffe705904eb3014e2df9e8bac09864736f6c63430008180033";

type PricingRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PricingRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PricingRegistry__factory extends ContractFactory {
  constructor(...args: PricingRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _contractRegistry: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_contractRegistry, overrides || {});
  }
  override deploy(
    _contractRegistry: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_contractRegistry, overrides || {}) as Promise<
      PricingRegistry & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PricingRegistry__factory {
    return super.connect(runner) as PricingRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PricingRegistryInterface {
    return new Interface(_abi) as PricingRegistryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PricingRegistry {
    return new Contract(address, _abi, runner) as unknown as PricingRegistry;
  }
}
