/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  PricingRegistry,
  PricingRegistryInterface,
} from "../../registry/PricingRegistry";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_contractRegistry",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "GraduatedLowerBoundMustBeZero",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidChargeStyle",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidQuantity",
    type: "error",
  },
  {
    inputs: [],
    name: "LastTierUpperBoundMustBeZeroToRepresentInfinity",
    type: "error",
  },
  {
    inputs: [],
    name: "LowerBoundGreaterThanUpperBound",
    type: "error",
  },
  {
    inputs: [],
    name: "LowerBoundMustBeOneGreaterThanPreviousUpperBound",
    type: "error",
  },
  {
    inputs: [],
    name: "NoTiersFound",
    type: "error",
  },
  {
    inputs: [],
    name: "PricingInactive",
    type: "error",
  },
  {
    inputs: [],
    name: "PricingNotAuthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "PricingRestrictedAccess",
    type: "error",
  },
  {
    inputs: [],
    name: "PricingTokensMismatch",
    type: "error",
  },
  {
    inputs: [],
    name: "RequiresERC20Token",
    type: "error",
  },
  {
    inputs: [],
    name: "RequiresOneTimeOrFlatRateChargeStyle",
    type: "error",
  },
  {
    inputs: [],
    name: "RequiresUsageChargeStyle",
    type: "error",
  },
  {
    inputs: [],
    name: "TokenNotWhitelisted",
    type: "error",
  },
  {
    inputs: [],
    name: "VolumeLowerBoundMustBeOne",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "organizationId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pricingId",
        type: "uint256",
      },
    ],
    name: "PricingCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "organizationId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pricingId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    name: "PricingStatusChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "organizationId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pricingId",
        type: "uint256",
      },
    ],
    name: "PricingUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "organizationId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pricingId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "productPassOwner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isRestricted",
        type: "bool",
      },
    ],
    name: "RestrictedAccessGranted",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "organizationId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "flatPrice",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "enum PricingUtils.ChargeFrequency",
            name: "chargeFrequency",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "isRestricted",
            type: "bool",
          },
        ],
        internalType:
          "struct IPricingRegistry.CreateFlatRateSubscriptionParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "createFlatRateSubscriptionPricing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "organizationId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "flatPrice",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "bool",
            name: "isRestricted",
            type: "bool",
          },
        ],
        internalType: "struct IPricingRegistry.CreateOneTimeParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "createOneTimePricing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "organizationId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "enum PricingUtils.ChargeFrequency",
            name: "chargeFrequency",
            type: "uint8",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "lowerBound",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "upperBound",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "pricePerUnit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "priceFlatRate",
                type: "uint256",
              },
            ],
            internalType: "struct PricingUtils.PricingTier[]",
            name: "tiers",
            type: "tuple[]",
          },
          {
            internalType: "bool",
            name: "isVolume",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isRestricted",
            type: "bool",
          },
        ],
        internalType: "struct IPricingRegistry.CreateTieredSubscriptionParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "createTieredSubscriptionPricing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "organizationId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "enum PricingUtils.ChargeFrequency",
            name: "chargeFrequency",
            type: "uint8",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "lowerBound",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "upperBound",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "pricePerUnit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "priceFlatRate",
                type: "uint256",
              },
            ],
            internalType: "struct PricingUtils.PricingTier[]",
            name: "tiers",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "usageMeterId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isVolume",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isRestricted",
            type: "bool",
          },
        ],
        internalType:
          "struct IPricingRegistry.CreateUsageBasedSubscriptionParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "createUsageBasedSubscriptionPricing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum PricingUtils.ChargeFrequency",
        name: "chargeFrequency",
        type: "uint8",
      },
    ],
    name: "getChargeFrequencyCycleDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pricingId",
        type: "uint256",
      },
    ],
    name: "getCycleDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_pricingIds",
        type: "uint256[]",
      },
    ],
    name: "getCycleDurationBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "cycleDurations",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "organizationId",
        type: "uint256",
      },
    ],
    name: "getOrgPricing",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "orgId",
            type: "uint256",
          },
          {
            internalType: "enum PricingUtils.ChargeStyle",
            name: "chargeStyle",
            type: "uint8",
          },
          {
            internalType: "enum PricingUtils.ChargeFrequency",
            name: "chargeFrequency",
            type: "uint8",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "lowerBound",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "upperBound",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "pricePerUnit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "priceFlatRate",
                type: "uint256",
              },
            ],
            internalType: "struct PricingUtils.PricingTier[]",
            name: "tiers",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "flatPrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "usageMeterId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isActive",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isRestricted",
            type: "bool",
          },
        ],
        internalType: "struct PricingUtils.Pricing[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "organizationId",
        type: "uint256",
      },
    ],
    name: "getOrgPricingIds",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pricingId",
        type: "uint256",
      },
    ],
    name: "getPricing",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "orgId",
            type: "uint256",
          },
          {
            internalType: "enum PricingUtils.ChargeStyle",
            name: "chargeStyle",
            type: "uint8",
          },
          {
            internalType: "enum PricingUtils.ChargeFrequency",
            name: "chargeFrequency",
            type: "uint8",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "lowerBound",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "upperBound",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "pricePerUnit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "priceFlatRate",
                type: "uint256",
              },
            ],
            internalType: "struct PricingUtils.PricingTier[]",
            name: "tiers",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "flatPrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "usageMeterId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isActive",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isRestricted",
            type: "bool",
          },
        ],
        internalType: "struct PricingUtils.Pricing",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_pricingIds",
        type: "uint256[]",
      },
    ],
    name: "getPricingBatch",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "orgId",
            type: "uint256",
          },
          {
            internalType: "enum PricingUtils.ChargeStyle",
            name: "chargeStyle",
            type: "uint8",
          },
          {
            internalType: "enum PricingUtils.ChargeFrequency",
            name: "chargeFrequency",
            type: "uint8",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "lowerBound",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "upperBound",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "pricePerUnit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "priceFlatRate",
                type: "uint256",
              },
            ],
            internalType: "struct PricingUtils.PricingTier[]",
            name: "tiers",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "flatPrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "usageMeterId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isActive",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isRestricted",
            type: "bool",
          },
        ],
        internalType: "struct PricingUtils.Pricing[]",
        name: "_pricing",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pricingSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "contract IContractRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "restrictedAccess",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pricingId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    name: "setPricingActive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pricingId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "flatPrice",
        type: "uint256",
      },
    ],
    name: "setPricingFlatPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pricingId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isRestricted",
        type: "bool",
      },
    ],
    name: "setPricingRestricted",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pricingId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "lowerBound",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "upperBound",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "pricePerUnit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "priceFlatRate",
            type: "uint256",
          },
        ],
        internalType: "struct PricingUtils.PricingTier[]",
        name: "tiers",
        type: "tuple[]",
      },
    ],
    name: "setPricingTiers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pricingId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "setPricingToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pricingId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "usageMeterId",
        type: "uint256",
      },
    ],
    name: "setPricingUsageMeterId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pricingId",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "productPassOwners",
        type: "address[]",
      },
      {
        internalType: "bool[]",
        name: "isRestricted",
        type: "bool[]",
      },
    ],
    name: "setRestrictedAccess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_organizationId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_productPassOwner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_pricingId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_quantity",
        type: "uint256",
      },
    ],
    name: "validateCheckout",
    outputs: [
      {
        internalType: "uint256",
        name: "cycleDuration",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_organizationId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_productPassOwner",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_pricingIds",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_quantities",
        type: "uint256[]",
      },
    ],
    name: "validateCheckoutBatch",
    outputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "cycleDurations",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_organizationId",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_pricingIds",
        type: "uint256[]",
      },
    ],
    name: "validateOrgPricing",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "lowerBound",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "upperBound",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "pricePerUnit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "priceFlatRate",
            type: "uint256",
          },
        ],
        internalType: "struct PricingUtils.PricingTier[]",
        name: "tiers",
        type: "tuple[]",
      },
      {
        internalType: "enum PricingUtils.ChargeStyle",
        name: "chargeStyle",
        type: "uint8",
      },
    ],
    name: "validateTiers",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "";

type PricingRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PricingRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PricingRegistry__factory extends ContractFactory {
  constructor(...args: PricingRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _contractRegistry: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_contractRegistry, overrides || {});
  }
  override deploy(
    _contractRegistry: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_contractRegistry, overrides || {}) as Promise<
      PricingRegistry & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PricingRegistry__factory {
    return super.connect(runner) as PricingRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PricingRegistryInterface {
    return new Interface(_abi) as PricingRegistryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PricingRegistry {
    return new Contract(address, _abi, runner) as unknown as PricingRegistry;
  }
}
