/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  ContractRegistry,
  ContractRegistryInterface,
} from "../../registry/ContractRegistry";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "AlreadyLocked",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "contractName",
        type: "string",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newAddress",
        type: "address",
      },
    ],
    name: "ContractUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "Locked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "ORG_LOCK",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PASS_LOCK",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "purchaseManager",
            type: "address",
          },
          {
            internalType: "address",
            name: "orgAdmin",
            type: "address",
          },
          {
            internalType: "address",
            name: "productPassNFT",
            type: "address",
          },
          {
            internalType: "address",
            name: "organizationNFT",
            type: "address",
          },
          {
            internalType: "address",
            name: "productRegistry",
            type: "address",
          },
          {
            internalType: "address",
            name: "pricingRegistry",
            type: "address",
          },
          {
            internalType: "address",
            name: "purchaseRegistry",
            type: "address",
          },
          {
            internalType: "address",
            name: "couponRegistry",
            type: "address",
          },
          {
            internalType: "address",
            name: "discountRegistry",
            type: "address",
          },
          {
            internalType: "address",
            name: "pricingCalculator",
            type: "address",
          },
          {
            internalType: "address",
            name: "productTransferOracle",
            type: "address",
          },
          {
            internalType: "address",
            name: "subscriptionTransferOracle",
            type: "address",
          },
          {
            internalType: "address",
            name: "subscriptionEscrow",
            type: "address",
          },
          {
            internalType: "address",
            name: "paymentEscrow",
            type: "address",
          },
          {
            internalType: "address",
            name: "usageRecorder",
            type: "address",
          },
        ],
        internalType: "struct IContractRegistry.BatchSetupContracts",
        name: "_contracts",
        type: "tuple",
      },
    ],
    name: "batchSetContracts",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "couponRegistry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "discountRegistry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "orgAdmin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "organizationNFT",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paymentEscrow",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pricingCalculator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pricingRegistry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "productPassNFT",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "productRegistry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "productTransferOracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "purchaseManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "purchaseRegistry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_couponRegistry",
        type: "address",
      },
    ],
    name: "setCouponRegistry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_discountRegistry",
        type: "address",
      },
    ],
    name: "setDiscountRegistry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_orgAdmin",
        type: "address",
      },
    ],
    name: "setOrgAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_organizationNFT",
        type: "address",
      },
    ],
    name: "setOrganizationNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_paymentEscrow",
        type: "address",
      },
    ],
    name: "setPaymentEscrow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pricingCalculator",
        type: "address",
      },
    ],
    name: "setPricingCalculator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pricingRegistry",
        type: "address",
      },
    ],
    name: "setPricingRegistry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_productPassNFT",
        type: "address",
      },
    ],
    name: "setProductPassNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_productRegistry",
        type: "address",
      },
    ],
    name: "setProductRegistry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_productTransferOracle",
        type: "address",
      },
    ],
    name: "setProductTransferOracle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_purchaseManager",
        type: "address",
      },
    ],
    name: "setPurchaseManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_purchaseRegistry",
        type: "address",
      },
    ],
    name: "setPurchaseRegistry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_subscriptionEscrow",
        type: "address",
      },
    ],
    name: "setSubscriptionEscrow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_subscriptionTransferOracle",
        type: "address",
      },
    ],
    name: "setSubscriptionTransferOracle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_usageRecorder",
        type: "address",
      },
    ],
    name: "setUsageRecorder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "subscriptionEscrow",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "subscriptionTransferOracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "usageRecorder",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50338061003757604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b61004081610046565b506100b2565b600180546001600160a01b031916905561005f81610062565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6114db806100c16000396000f3fe608060405234801561001057600080fd5b506004361061023d5760003560e01c80639060b5321161013b578063d8a2848d116100b8578063f5a7754a1161007c578063f5a7754a14610513578063f808468414610526578063fb147d3114610539578063fc9354fa1461054c578063fff218c31461055f57600080fd5b8063d8a2848d146104b6578063e30c3978146104c9578063eebc3a69146104da578063f11466cc146104ed578063f2fde38b1461050057600080fd5b8063a292f7d3116100ff578063a292f7d314610457578063aa6afd0d1461046a578063b46c70b21461047d578063bb9d0aaa14610490578063cfd8fe0c146104a357600080fd5b80639060b532146103e457806390f22e93146103f7578063943f0c901461041e57806396b79c9814610431578063a0ee33cb1461044457600080fd5b806359543973116101c9578063715018a61161018d578063715018a61461039d578063758d5931146103a557806379ba5097146103b85780638a949cb6146103c05780638da5cb5b146103d357600080fd5b8063595439731461033e5780635cbf60cc146103515780635ceac754146103645780635ee2173f1461037757806365f136731461038a57600080fd5b8063402cbe8111610210578063402cbe81146102bd5780634ce91862146102f25780634e6bdd97146103055780635188779314610318578063559735001461032b57600080fd5b806301ffc9a7146102425780630a6413921461026a5780631e88eff2146102955780632e6c94d9146102aa575b600080fd5b610255610250366004611233565b610572565b60405190151581526020015b60405180910390f35b60085461027d906001600160a01b031681565b6040516001600160a01b039091168152602001610261565b6102a86102a3366004611280565b6105a9565b005b6102a86102b8366004611280565b6105bd565b6102e47f4488ea798b08fd87ab47d585ed91f1ba62f7a5c8f52231f3af11236d9fcfa01081565b604051908152602001610261565b600e5461027d906001600160a01b031681565b6102a8610313366004611280565b6105ce565b600a5461027d906001600160a01b031681565b6102a8610339366004611280565b6105df565b60045461027d906001600160a01b031681565b60035461027d906001600160a01b031681565b6102a8610372366004611280565b6105f0565b600d5461027d906001600160a01b031681565b60115461027d906001600160a01b031681565b6102a8610601565b60055461027d906001600160a01b031681565b6102a8610615565b6102a86103ce366004611280565b61065b565b6000546001600160a01b031661027d565b6102a86103f23660046112d3565b61066c565b6102e47f5898b3d6d8c01364c32543fbc9aca6145e8f452630878d1e265409183a60833081565b6102a861042c366004611280565b61073c565b6102a861043f366004611280565b61074d565b6102a8610452366004611280565b61075e565b60105461027d906001600160a01b031681565b6102a8610478366004611280565b61076f565b600b5461027d906001600160a01b031681565b6102a861049e366004611280565b610780565b60065461027d906001600160a01b031681565b6102a86104c4366004611280565b610791565b6001546001600160a01b031661027d565b60095461027d906001600160a01b031681565b600c5461027d906001600160a01b031681565b6102a861050e366004611280565b6107a2565b6102a8610521366004611280565b610813565b6102a8610534366004611280565b610824565b6102a8610547366004611280565b610835565b600f5461027d906001600160a01b031681565b60075461027d906001600160a01b031681565b60006001600160e01b03198216630d92111760e41b14806105a357506001600160e01b031982166301ffc9a760e01b145b92915050565b6105b1610846565b6105ba81610873565b50565b6105c5610846565b6105ba8161091e565b6105d6610846565b6105ba816109f0565b6105e7610846565b6105ba81610a74565b6105f8610846565b6105ba81610aee565b610609610846565b6106136000610bbe565b565b60015433906001600160a01b031681146106525760405163118cdaa760e01b81526001600160a01b03821660048201526024015b60405180910390fd5b6105ba81610bbe565b610663610846565b6105ba81610bd7565b610674610846565b805161067f90610c55565b61068c8160200151610873565b6106998160400151610aee565b6106a6816060015161091e565b6106b38160800151610ccd565b6106c08160a00151610d45565b6106cd8160c00151610a74565b6106da8160e00151610dbd565b6106e8816101000151610e33565b6106f6816101200151610ead565b6107048161014001516109f0565b610712816101600151610f29565b610720816101800151610bd7565b61072e816101a00151610fbc565b6105ba816101c00151611030565b610744610846565b6105ba81611030565b610755610846565b6105ba81610ead565b610766610846565b6105ba81610dbd565b610777610846565b6105ba81610e33565b610788610846565b6105ba81610c55565b610799610846565b6105ba81610fbc565b6107aa610846565b600180546001600160a01b0383166001600160a01b031990911681179091556107db6000546001600160a01b031690565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b61081b610846565b6105ba81610ccd565b61082c610846565b6105ba81610f29565b61083d610846565b6105ba81610d45565b6000546001600160a01b031633146106135760405163118cdaa760e01b8152336004820152602401610649565b6108af8163a6bd120960e01b6040518060400160405280601281526020017124a7b933b0b734bd30ba34b7b720b236b4b760711b8152506110a4565b600480546001600160a01b0319166001600160a01b0383169081179091556040517027b933b0b734bd30ba34b7b720b236b4b760791b81526011015b604051908190038120907ff611fec7babefd259c57ea5b6006acff8140ab17bb816c65ba0aa7e36c09caa890600090a350565b61094f816380ac58cd60e01b604051806040016040528060078152602001664945524337323160c81b8152506110a4565b6109898163232d1a6960e01b6040518060400160405280601081526020016f1253dc99d85b9a5e985d1a5bdb93919560821b8152506110a4565b6109b27f5898b3d6d8c01364c32543fbc9aca6145e8f452630878d1e265409183a60833061115a565b600680546001600160a01b0319166001600160a01b0383169081179091556040516e13dc99d85b9a5e985d1a5bdb939195608a1b8152600f016108eb565b610a30816316cb3f8760e21b604051806040016040528060168152602001754950726f647563745472616e736665724f7261636c6560501b8152506110a4565b600d80546001600160a01b0319166001600160a01b0383169081179091556040517450726f647563745472616e736665724f7261636c6560581b81526015016108eb565b610aaf81637e81f0d360e11b60405180604001604052806011815260200170495075726368617365526567697374727960781b8152506110a4565b600980546001600160a01b0319166001600160a01b0383169081179091556040516f5075726368617365526567697374727960801b81526010016108eb565b610b1f816380ac58cd60e01b604051806040016040528060078152602001664945524337323160c81b8152506110a4565b610b58816340c10f1960e01b6040518060400160405280600f81526020016e12541c9bd91d58dd14185cdcd39195608a1b8152506110a4565b610b817f4488ea798b08fd87ab47d585ed91f1ba62f7a5c8f52231f3af11236d9fcfa01061115a565b600580546001600160a01b0319166001600160a01b0383169081179091556040516d141c9bd91d58dd14185cdcd3919560921b8152600e016108eb565b600180546001600160a01b03191690556105ba816111e3565b610c14816316c412f360e21b6040518060400160405280601381526020017249537562736372697074696f6e457363726f7760681b8152506110a4565b600f80546001600160a01b0319166001600160a01b03831690811790915560405171537562736372697074696f6e457363726f7760701b81526012016108eb565b610c8f81634478e77b60e11b6040518060400160405280601081526020016f24a83ab931b430b9b2a6b0b730b3b2b960811b8152506110a4565b600380546001600160a01b0319166001600160a01b0383169081179091556040516e283ab931b430b9b2a6b0b730b3b2b960891b8152600f016108eb565b610d078163c0087dd960e01b6040518060400160405280601081526020016f4950726f64756374526567697374727960801b8152506110a4565b600780546001600160a01b0319166001600160a01b0383169081179091556040516e50726f64756374526567697374727960881b8152600f016108eb565b610d7f81633ac7ac0560e01b6040518060400160405280601081526020016f4950726963696e67526567697374727960801b8152506110a4565b600880546001600160a01b0319166001600160a01b0383169081179091556040516e50726963696e67526567697374727960881b8152600f016108eb565b610df681633e87695360e21b6040518060400160405280600f81526020016e49436f75706f6e526567697374727960881b8152506110a4565b600a80546001600160a01b0319166001600160a01b0383169081179091556040516d436f75706f6e526567697374727960901b8152600e016108eb565b610e6e81633bbace6160e21b6040518060400160405280601181526020017049446973636f756e74526567697374727960781b8152506110a4565b600b80546001600160a01b0319166001600160a01b0383169081179091556040516f446973636f756e74526567697374727960801b81526010016108eb565b610ee9816302a09aa360e01b6040518060400160405280601281526020017124a83934b1b4b733a1b0b631bab630ba37b960711b8152506110a4565b600c80546001600160a01b0319166001600160a01b03831690811790915560405170283934b1b4b733a1b0b631bab630ba37b960791b81526011016108eb565b610f70816312a0780560e31b6040518060400160405280601b81526020017f49537562736372697074696f6e5472616e736665724f7261636c6500000000008152506110a4565b600e80546001600160a01b0319166001600160a01b0383169081179091556040517f537562736372697074696f6e5472616e736665724f7261636c650000000000008152601a016108eb565b610ff481631dd0a3ff60e01b6040518060400160405280600e81526020016d495061796d656e74457363726f7760901b8152506110a4565b601080546001600160a01b0319166001600160a01b0383169081179091556040516c5061796d656e74457363726f7760981b8152600d016108eb565b61106881636459951b60e01b6040518060400160405280600e81526020016d24aab9b0b3b2a932b1b7b93232b960911b8152506110a4565b601180546001600160a01b0319166001600160a01b0383169081179091556040516c2ab9b0b3b2a932b1b7b93232b960991b8152600d016108eb565b6040516301ffc9a760e01b81526001600160e01b0319831660048201526001600160a01b038416906301ffc9a790602401602060405180830381865afa1580156110f2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061111691906113f5565b81604051602001611127919061143b565b604051602081830303815290604052906111545760405162461bcd60e51b81526004016106499190611472565b50505050565b60008181526002602052604090205460ff161561118d57604051636489019160e01b815260048101829052602401610649565b60008181526002602052604090819020805460ff19166001179055517f3223c64d0518f39e3854050c1ea77cb9f25539e39168510c5a0cc7aad992b306906111d89083815260200190565b60405180910390a150565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561124557600080fd5b81356001600160e01b03198116811461125d57600080fd5b9392505050565b80356001600160a01b038116811461127b57600080fd5b919050565b60006020828403121561129257600080fd5b61125d82611264565b6040516101e0810167ffffffffffffffff811182821017156112cd57634e487b7160e01b600052604160045260246000fd5b60405290565b60006101e082840312156112e657600080fd5b6112ee61129b565b6112f783611264565b815261130560208401611264565b602082015261131660408401611264565b604082015261132760608401611264565b606082015261133860808401611264565b608082015261134960a08401611264565b60a082015261135a60c08401611264565b60c082015261136b60e08401611264565b60e082015261010061137e818501611264565b90820152610120611390848201611264565b908201526101406113a2848201611264565b908201526101606113b4848201611264565b908201526101806113c6848201611264565b908201526101a06113d8848201611264565b908201526101c06113ea848201611264565b908201529392505050565b60006020828403121561140757600080fd5b8151801515811461125d57600080fd5b60005b8381101561143257818101518382015260200161141a565b50506000910152565b6e026bab9ba1034b6b83632b6b2b73a1608d1b81526000825161146581600f850160208701611417565b91909101600f0192915050565b6020815260008251806020840152611491816040850160208701611417565b601f01601f1916919091016040019291505056fea2646970667358221220087a1f2e971ec285a797f14df31e943d69e27a840d256c650b06d8c24bf7facb64736f6c63430008180033";

type ContractRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ContractRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ContractRegistry__factory extends ContractFactory {
  constructor(...args: ContractRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ContractRegistry & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ContractRegistry__factory {
    return super.connect(runner) as ContractRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ContractRegistryInterface {
    return new Interface(_abi) as ContractRegistryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ContractRegistry {
    return new Contract(address, _abi, runner) as unknown as ContractRegistry;
  }
}
