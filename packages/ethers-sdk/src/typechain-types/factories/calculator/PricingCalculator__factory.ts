/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  PricingCalculator,
  PricingCalculatorInterface,
} from "../../calculator/PricingCalculator";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_contractRegistry",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidChargeStyle",
    type: "error",
  },
  {
    inputs: [],
    name: "TieredChargeStyleInconsistency",
    type: "error",
  },
  {
    inputs: [],
    name: "UnitQuantityIsTheSame",
    type: "error",
  },
  {
    inputs: [],
    name: "UsageBasedChargeStyleInconsistency",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "oldPricingId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newPricingId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "currentStartDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "currentEndDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    name: "getChangeSubscriptionCost",
    outputs: [
      {
        internalType: "uint256",
        name: "newEndDate",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pricingId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "currentStartDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "currentEndDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "oldQuantity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newQuantity",
        type: "uint256",
      },
    ],
    name: "getChangeUnitQuantityCost",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "organizationId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "productPassOwner",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "productIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "pricingIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "quantities",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "discountIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "couponId",
            type: "uint256",
          },
        ],
        internalType: "struct IPricingCalculator.CheckoutTotalCostParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "getCheckoutTotalCost",
    outputs: [
      {
        components: [
          {
            internalType: "uint256[]",
            name: "pricingIds",
            type: "uint256[]",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "costs",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "couponCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "couponDiscount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "couponSavings",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "permanentCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "permanentDiscount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "permanentSavings",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "subTotalCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "checkoutTotalCost",
            type: "uint256",
          },
        ],
        internalType: "struct IPricingCalculator.CheckoutTotalCost",
        name: "checkout",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "pricingIds",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "quantities",
        type: "uint256[]",
      },
    ],
    name: "getInitialPurchaseCost",
    outputs: [
      {
        internalType: "uint256",
        name: "cost",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pricingId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    name: "getPricingTotalCost",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum PricingUtils.ChargeStyle",
        name: "chargeStyle",
        type: "uint8",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "lowerBound",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "upperBound",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "pricePerUnit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "priceFlatRate",
            type: "uint256",
          },
        ],
        internalType: "struct PricingUtils.PricingTier[]",
        name: "tiers",
        type: "tuple[]",
      },
      {
        internalType: "uint256",
        name: "flatPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    name: "getTotalCost",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "contract IContractRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "lowerBound",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "upperBound",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "pricePerUnit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "priceFlatRate",
            type: "uint256",
          },
        ],
        internalType: "struct PricingUtils.PricingTier[]",
        name: "tiers",
        type: "tuple[]",
      },
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    name: "totalGraduatedCost",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "lowerBound",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "upperBound",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "pricePerUnit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "priceFlatRate",
            type: "uint256",
          },
        ],
        internalType: "struct PricingUtils.PricingTier[]",
        name: "tiers",
        type: "tuple[]",
      },
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    name: "totalVolumeCost",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620029783803806200297883398101604081905262000034916200005a565b600080546001600160a01b0319166001600160a01b03929092169190911790556200008c565b6000602082840312156200006d57600080fd5b81516001600160a01b03811681146200008557600080fd5b9392505050565b6128dc806200009c6000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80634734c5c8116100665780634734c5c8146101485780636650b6d2146101685780637b1039991461017b578063dd8817fd146101a6578063f45c123a146101b957600080fd5b806301ffc9a7146100a357806312253dc0146100cb578063169a64e9146100ec57806330b7577a146101225780633e18e22d14610135575b600080fd5b6100b66100b1366004611ccc565b6101eb565b60405190151581526020015b60405180910390f35b6100de6100d9366004611e92565b610222565b6040519081526020016100c2565b6100ff6100fa366004611ed6565b610392565b604080519384526001600160a01b039092166020840152908201526060016100c2565b6100de610130366004611f70565b6106b2565b6100de610143366004611e92565b610900565b61015b610156366004611ff6565b610c1a565b6040516100c29190612132565b6100de610176366004612201565b610f34565b60005461018e906001600160a01b031681565b6040516001600160a01b0390911681526020016100c2565b6100de6101b4366004612260565b610fce565b6101cc6101c7366004611ed6565b6110c8565b604080516001600160a01b0390931683526020830191909152016100c2565b60006001600160e01b031982166302a09aa360e01b148061021c57506001600160e01b031982166301ffc9a760e01b145b92915050565b600082516000036102355750600061021c565b81600003610263578260008151811061025057610250612282565b602002602001015160600151905061021c565b60005b835181101561031f5783818151811061028157610281612282565b60200260200101516000015183101580156102b957508381815181106102a9576102a9612282565b6020026020010151602001518311155b15610317578381815181106102d0576102d0612282565b602002602001015160600151838583815181106102ef576102ef612282565b60200260200101516040015161030591906122ae565b61030f91906122c5565b91505061021c565b600101610266565b50826001845161032f91906122d8565b8151811061033f5761033f612282565b60200260200101516060015182846001865161035b91906122d8565b8151811061036b5761036b612282565b60200260200101516040015161038191906122ae565b61038b91906122c5565b9392505050565b60008060008688036103eb5760405162461bcd60e51b815260206004820152601860248201527f50726963696e672069647320617265207468652073616d65000000000000000060448201526064015b60405180910390fd5b6103f5868661135d565b60008060009054906101000a90046001600160a01b03166001600160a01b0316630a6413926040518163ffffffff1660e01b8152600401602060405180830381865afa158015610449573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061046d91906122f6565b6001600160a01b031663c12f1a428a6040518263ffffffff1660e01b815260040161049a91815260200190565b600060405180830381865afa1580156104b7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104df919081019061248c565b905060008060009054906101000a90046001600160a01b03166001600160a01b0316630a6413926040518163ffffffff1660e01b8152600401602060405180830381865afa158015610535573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055991906122f6565b6001600160a01b031663c12f1a428a6040518263ffffffff1660e01b815260040161058691815260200190565b600060405180830381865afa1580156105a3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105cb919081019061248c565b90506000826020015160058111156105e5576105e56124c0565b14806106065750600081602001516005811115610604576106046124c0565b145b1561062457604051637f01c5d160e11b815260040160405180910390fd5b61062d816113b0565b1515610638836113b0565b1515146106585760405163768212c760e01b815260040160405180910390fd5b610661816113f1565b151561066c836113f1565b15151461068c57604051631b96952560e21b815260040160405180910390fd5b806080015193506106a082828a8a8a611419565b909b949a509850929650505050505050565b6000808351116107045760405162461bcd60e51b815260206004820152601760248201527f4e6f2070726963696e67206964732070726f766964656400000000000000000060448201526064016103e2565b815183511461074b5760405162461bcd60e51b8152602060048201526013602482015272496e76616c69642070726963696e672069647360681b60448201526064016103e2565b60008060009054906101000a90046001600160a01b03166001600160a01b0316630a6413926040518163ffffffff1660e01b8152600401602060405180830381865afa15801561079f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c391906122f6565b6001600160a01b031663d4ca8b70856040518263ffffffff1660e01b81526004016107ee91906124d6565b600060405180830381865afa15801561080b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261083391908101906124e9565b905060005b84518110156108f85761086382828151811061085657610856612282565b60200260200101516113b0565b6108f0576108e382828151811061087c5761087c612282565b60200260200101516020015183838151811061089a5761089a612282565b6020026020010151606001518484815181106108b8576108b8612282565b602002602001015160a001518785815181106108d6576108d6612282565b6020026020010151610f34565b6108ed90846122c5565b92505b600101610838565b505092915050565b600081158061090e57508251155b1561091b5750600061021c565b6000805b8451811015610c125784818151811061093a5761093a612282565b6020026020010151600001518410610c12576001855161095a91906122d8565b8114806109ac575084818151811061097457610974612282565b60200260200101516000015184101580156109ac575084818151811061099c5761099c612282565b6020026020010151602001518411155b15610a7f5780600003610a1b578481815181106109cb576109cb612282565b602002602001015160600151848683815181106109ea576109ea612282565b602002602001015160400151610a0091906122ae565b610a0a91906122c5565b610a1490836122c5565b9150610c0a565b848181518110610a2d57610a2d612282565b602002602001015160600151858281518110610a4b57610a4b612282565b60200260200101516000015185610a6291906122d8565b610a6d9060016122c5565b8683815181106109ea576109ea612282565b848181518110610a9157610a91612282565b602002602001015160200151858281518110610aaf57610aaf612282565b60200260200101516000015103610b0657848181518110610ad257610ad2612282565b602002602001015160600151858281518110610af057610af0612282565b602002602001015160400151610a0a91906122c5565b80600003610b5c57848181518110610b2057610b20612282565b602002602001015160600151858281518110610b3e57610b3e612282565b6020026020010151602001518683815181106109ea576109ea612282565b848181518110610b6e57610b6e612282565b602002602001015160600151858281518110610b8c57610b8c612282565b602002602001015160000151868381518110610baa57610baa612282565b602002602001015160200151610bc091906122d8565b610bcb9060016122c5565b868381518110610bdd57610bdd612282565b602002602001015160400151610bf391906122ae565b610bfd91906122c5565b610c0790836122c5565b91505b60010161091f565b509392505050565b610c806040518061016001604052806060815260200160006001600160a01b031681526020016060815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b60008054906101000a90046001600160a01b03166001600160a01b031663fff218c36040518163ffffffff1660e01b8152600401602060405180830381865afa158015610cd1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cf591906122f6565b6001600160a01b031663e1bd77558360000151846040015185606001516040518463ffffffff1660e01b8152600401610d3093929190612599565b60006040518083038186803b158015610d4857600080fd5b505afa158015610d5c573d6000803e3d6000fd5b5050505060008054906101000a90046001600160a01b03166001600160a01b0316630a6413926040518163ffffffff1660e01b8152600401602060405180830381865afa158015610db1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dd591906122f6565b6001600160a01b031663f332f2bc83600001518460200151856060015186608001516040518563ffffffff1660e01b8152600401610e1694939291906125c4565b600060405180830381865afa158015610e33573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610e5b919081019061260b565b50506040805161016081018252606084018051825260006020830152515190918201906001600160401b03811115610e9557610e95611cf6565b604051908082528060200260200182016040528015610ebe578160200160208202803683370190505b5081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152509050610f068282611667565b60c082015115610f1a57610f1a8282611873565b60a08201515115610f2f57610f2f8282611a7c565b919050565b600080856005811115610f4957610f496124c0565b1480610f6657506001856005811115610f6457610f646124c0565b145b15610f72575081610fc6565b6002856005811115610f8657610f866124c0565b1480610fa357506004856005811115610fa157610fa16124c0565b145b15610fb957610fb28483610222565b9050610fc6565b610fc38483610900565b90505b949350505050565b600080546040805163053209c960e11b8152905183926001600160a01b031691630a6413929160048083019260209291908290030181865afa158015611018573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061103c91906122f6565b6001600160a01b031663c12f1a42856040518263ffffffff1660e01b815260040161106991815260200190565b600060405180830381865afa158015611086573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526110ae919081019061248c565b9050610fc6816020015182606001518360a0015186610f34565b6000806110d5868661135d565b60008060009054906101000a90046001600160a01b03166001600160a01b0316630a6413926040518163ffffffff1660e01b8152600401602060405180830381865afa158015611129573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061114d91906122f6565b6001600160a01b031663c12f1a42896040518263ffffffff1660e01b815260040161117a91815260200190565b600060405180830381865afa158015611197573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526111bf919081019061248c565b90506111ca816113f1565b6111e757604051637f01c5d160e11b815260040160405180910390fd5b8385036112075760405163640b374760e11b815260040160405180910390fd5b6000611221826020015183606001518460a0015189610f34565b9050600061123d836020015184606001518560a0015189610f34565b905080821061125757505060800151915060009050611353565b608083015161134b61126984846122d8565b6000546040805163053209c960e11b815290518e926001600160a01b031691630a6413929160048083019260209291908290030181865afa1580156112b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112d691906122f6565b6001600160a01b031663f3ef32cf88604001516040518263ffffffff1660e01b815260040161130591906126b2565b602060405180830381865afa158015611322573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061134691906126da565b611c90565b945094505050505b9550959350505050565b428210801561136b57504281115b6113ac5760405162461bcd60e51b8152602060048201526012602482015271496e76616c696420646174652072616e676560701b60448201526064016103e2565b5050565b60006004826020015160058111156113ca576113ca6124c0565b148061021c575060055b826020015160058111156113ea576113ea6124c0565b1492915050565b600060028260200151600581111561140b5761140b6124c0565b148061021c575060036113d4565b60008060008060009054906101000a90046001600160a01b03166001600160a01b0316630a6413926040518163ffffffff1660e01b8152600401602060405180830381865afa158015611470573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061149491906122f6565b6001600160a01b031663f3ef32cf88604001516040518263ffffffff1660e01b81526004016114c391906126b2565b602060405180830381865afa1580156114e0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061150491906126da565b905060008060009054906101000a90046001600160a01b03166001600160a01b0316630a6413926040518163ffffffff1660e01b8152600401602060405180830381865afa15801561155a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061157e91906122f6565b6001600160a01b031663f3ef32cf8a604001516040518263ffffffff1660e01b81526004016115ad91906126b2565b602060405180830381865afa1580156115ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115ee91906126da565b90508161160f6115fe89896122d8565b83600082821882841102821861038b565b1061161c5785935061165b565b611625896113b0565b61164e5761164b61164489602001518a606001518b60a0015189610f34565b8884611c90565b92505b61165882886122c5565b93505b50509550959350505050565b60008060009054906101000a90046001600160a01b03166001600160a01b0316630a6413926040518163ffffffff1660e01b8152600401602060405180830381865afa1580156116bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116df91906122f6565b6001600160a01b031663d4ca8b7084606001516040518263ffffffff1660e01b815260040161170e91906124d6565b600060405180830381865afa15801561172b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261175391908101906124e9565b90508060008151811061176857611768612282565b602090810291909101810151608001516001600160a01b03169083015260005b8151811015611861576118048282815181106117a6576117a6612282565b6020026020010151602001518383815181106117c4576117c4612282565b6020026020010151606001518484815181106117e2576117e2612282565b602002602001015160a00151876080015185815181106108d6576108d6612282565b8360400151828151811061181a5761181a612282565b6020026020010181815250508260400151818151811061183c5761183c612282565b6020026020010151836101200181815161185691906122c5565b905250600101611788565b50506101208101516101409091015250565b60008054906101000a90046001600160a01b03166001600160a01b031663518877936040518163ffffffff1660e01b8152600401602060405180830381865afa1580156118c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118e891906122f6565b60c0830151610120830151604051634e06e10f60e11b8152600481019290925260248201526001600160a01b039190911690639c0dc21e90604401602060405180830381865afa158015611940573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061196491906126da565b606082015260005460408051635188779360e01b815290516001600160a01b03909216916351887793916004808201926020929091908290030181865afa1580156119b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119d791906122f6565b6001600160a01b031663936e31698360c001516040518263ffffffff1660e01b8152600401611a0891815260200190565b600060405180830381865afa158015611a25573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611a4d9190810190612777565b60400151608082015260608101516101408201819052610120820151611a7391906122d8565b60a09091015250565b600080826060015111611a9457816101200151611a9a565b81606001515b905060008054906101000a90046001600160a01b03166001600160a01b031663b46c70b26040518163ffffffff1660e01b8152600401602060405180830381865afa158015611aed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b1191906122f6565b6001600160a01b031663dab94e2a8460a00151836040518363ffffffff1660e01b8152600401611b42929190612862565b602060405180830381865afa158015611b5f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b8391906126da565b60c083015260005460408051635a36385960e11b815290516001600160a01b039092169163b46c70b2916004808201926020929091908290030181865afa158015611bd2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bf691906122f6565b6001600160a01b0316631eb342258460a001516040518263ffffffff1660e01b8152600401611c2591906124d6565b602060405180830381865afa158015611c42573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c6691906126da565b60e083015260c08201516101408301819052611c8290826122d8565b610100909201919091525050565b600080611c9d84426122d8565b90506000611cab82856122d8565b905083611cb882886122ae565b611cc29190612884565b9695505050505050565b600060208284031215611cde57600080fd5b81356001600160e01b03198116811461038b57600080fd5b634e487b7160e01b600052604160045260246000fd5b604051608081016001600160401b0381118282101715611d2e57611d2e611cf6565b60405290565b60405160e081016001600160401b0381118282101715611d2e57611d2e611cf6565b60405161012081016001600160401b0381118282101715611d2e57611d2e611cf6565b60405161014081016001600160401b0381118282101715611d2e57611d2e611cf6565b604051601f8201601f191681016001600160401b0381118282101715611dc457611dc4611cf6565b604052919050565b60006001600160401b03821115611de557611de5611cf6565b5060051b60200190565b600082601f830112611e0057600080fd5b81356020611e15611e1083611dcc565b611d9c565b82815260079290921b84018101918181019086841115611e3457600080fd5b8286015b84811015611e875760808189031215611e515760008081fd5b611e59611d0c565b8135815284820135858201526040808301359082015260608083013590820152835291830191608001611e38565b509695505050505050565b60008060408385031215611ea557600080fd5b82356001600160401b03811115611ebb57600080fd5b611ec785828601611def565b95602094909401359450505050565b600080600080600060a08688031215611eee57600080fd5b505083359560208501359550604085013594606081013594506080013592509050565b600082601f830112611f2257600080fd5b81356020611f32611e1083611dcc565b8083825260208201915060208460051b870101935086841115611f5457600080fd5b602086015b84811015611e875780358352918301918301611f59565b60008060408385031215611f8357600080fd5b82356001600160401b0380821115611f9a57600080fd5b611fa686838701611f11565b93506020850135915080821115611fbc57600080fd5b50611fc985828601611f11565b9150509250929050565b6001600160a01b0381168114611fe857600080fd5b50565b8035610f2f81611fd3565b60006020828403121561200857600080fd5b81356001600160401b038082111561201f57600080fd5b9083019060e0828603121561203357600080fd5b61203b611d34565b8235815261204b60208401611feb565b602082015260408301358281111561206257600080fd5b61206e87828601611f11565b60408301525060608301358281111561208657600080fd5b61209287828601611f11565b6060830152506080830135828111156120aa57600080fd5b6120b687828601611f11565b60808301525060a0830135828111156120ce57600080fd5b6120da87828601611f11565b60a08301525060c083013560c082015280935050505092915050565b60008151808452602080850194506020840160005b838110156121275781518752958201959082019060010161210b565b509495945050505050565b60208152600082516101608060208501526121516101808501836120f6565b9150602085015161216d60408601826001600160a01b03169052565b506040850151848303601f1901606086015261218983826120f6565b92505060608501516080850152608085015160a085015260a085015160c085015260c085015160e085015260e0850151610100818187015280870151915050610120818187015280870151915050610140818187015280870151838701525050508091505092915050565b60068110611fe857600080fd5b6000806000806080858703121561221757600080fd5b8435612222816121f4565b935060208501356001600160401b0381111561223d57600080fd5b61224987828801611def565b949794965050505060408301359260600135919050565b6000806040838503121561227357600080fd5b50508035926020909101359150565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761021c5761021c612298565b8082018082111561021c5761021c612298565b8181038181111561021c5761021c612298565b8051610f2f81611fd3565b60006020828403121561230857600080fd5b815161038b81611fd3565b8051610f2f816121f4565b805160058110610f2f57600080fd5b600082601f83011261233e57600080fd5b8151602061234e611e1083611dcc565b82815260079290921b8401810191818101908684111561236d57600080fd5b8286015b84811015611e87576080818903121561238a5760008081fd5b612392611d0c565b8151815284820151858201526040808301519082015260608083015190820152835291830191608001612371565b80518015158114610f2f57600080fd5b600061012082840312156123e357600080fd5b6123eb611d56565b9050815181526123fd60208301612313565b602082015261240e6040830161231e565b604082015260608201516001600160401b0381111561242c57600080fd5b6124388482850161232d565b60608301525061244a608083016122eb565b608082015260a082015160a082015260c082015160c082015261246f60e083016123c0565b60e08201526101006124828184016123c0565b9082015292915050565b60006020828403121561249e57600080fd5b81516001600160401b038111156124b457600080fd5b610fc6848285016123d0565b634e487b7160e01b600052602160045260246000fd5b60208152600061038b60208301846120f6565b600060208083850312156124fc57600080fd5b82516001600160401b038082111561251357600080fd5b818501915085601f83011261252757600080fd5b8151612535611e1082611dcc565b81815260059190911b8301840190848101908883111561255457600080fd5b8585015b8381101561258c578051858111156125705760008081fd5b61257e8b89838a01016123d0565b845250918601918601612558565b5098975050505050505050565b8381526060602082015260006125b260608301856120f6565b8281036040840152611cc281856120f6565b8481526001600160a01b03841660208201526080604082018190526000906125ee908301856120f6565b828103606084015261260081856120f6565b979650505050505050565b6000806040838503121561261e57600080fd5b825161262981611fd3565b809250506020808401516001600160401b0381111561264757600080fd5b8401601f8101861361265857600080fd5b8051612666611e1082611dcc565b81815260059190911b8201830190838101908883111561268557600080fd5b928401925b828410156126a35783518252928401929084019061268a565b80955050505050509250929050565b60208101600583106126d457634e487b7160e01b600052602160045260246000fd5b91905290565b6000602082840312156126ec57600080fd5b5051919050565b600082601f83011261270457600080fd5b81516001600160401b0381111561271d5761271d611cf6565b6020612731601f8301601f19168201611d9c565b828152858284870101111561274557600080fd5b60005b83811015612763578581018301518282018401528201612748565b506000928101909101919091529392505050565b60006020828403121561278957600080fd5b81516001600160401b03808211156127a057600080fd5b9083019061014082860312156127b557600080fd5b6127bd611d79565b825181526020830151828111156127d357600080fd5b6127df878286016126f3565b60208301525060408301516040820152606083015160608201526080830151608082015260a083015160a082015261281960c084016123c0565b60c082015261282a60e084016123c0565b60e0820152610100915061283f8284016123c0565b8282015261012091506128538284016123c0565b91810191909152949350505050565b60408152600061287560408301856120f6565b90508260208301529392505050565b6000826128a157634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220d6528114854d86427aa01546ad9d147e3f534a6c98aff64f47ddd0ba901fb0a664736f6c63430008180033";

type PricingCalculatorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PricingCalculatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PricingCalculator__factory extends ContractFactory {
  constructor(...args: PricingCalculatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _contractRegistry: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_contractRegistry, overrides || {});
  }
  override deploy(
    _contractRegistry: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_contractRegistry, overrides || {}) as Promise<
      PricingCalculator & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PricingCalculator__factory {
    return super.connect(runner) as PricingCalculator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PricingCalculatorInterface {
    return new Interface(_abi) as PricingCalculatorInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PricingCalculator {
    return new Contract(address, _abi, runner) as unknown as PricingCalculator;
  }
}
