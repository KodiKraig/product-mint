/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  UsageRecorder,
  UsageRecorderInterface,
} from "../../usage/UsageRecorder";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_contractRegistry",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "organizationId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "meterId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    name: "MeterActiveSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "organizationId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "meterId",
        type: "uint256",
      },
    ],
    name: "MeterCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "organizationId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "meterId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "usage",
        type: "uint256",
      },
    ],
    name: "MeterPaymentProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "organizationId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "meterId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "usage",
        type: "uint256",
      },
    ],
    name: "MeterUsageSet",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "meterId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "adjustMeter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "organizationId",
        type: "uint256",
      },
      {
        internalType: "enum IUsageRecorder.AggregationMethod",
        name: "aggregationMethod",
        type: "uint8",
      },
    ],
    name: "createMeter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "organizationId",
        type: "uint256",
      },
    ],
    name: "getOrganizationMeters",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "meterId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "increaseMeter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "meterId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "incrementMeter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "meterId",
        type: "uint256",
      },
    ],
    name: "isActiveOrgMeter",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "passUsages",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "meterId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "processMeterPayment",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "contract IContractRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "meterId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    name: "setMeterActive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalMeterCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "usageMeters",
    outputs: [
      {
        internalType: "uint256",
        name: "orgId",
        type: "uint256",
      },
      {
        internalType: "enum IUsageRecorder.AggregationMethod",
        name: "aggregationMethod",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001cae38038062001cae8339818101604052810190620000379190620000ea565b80806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506200011c565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000b28262000085565b9050919050565b620000c481620000a5565b8114620000d057600080fd5b50565b600081519050620000e481620000b9565b92915050565b60006020828403121562000103576200010262000080565b5b60006200011384828501620000d3565b91505092915050565b611b82806200012c6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063af1af6771161008c578063c14ed61511610066578063c14ed61514610224578063c95fdd6514610254578063f3cb568614610286578063ff277fb6146102a2576100cf565b8063af1af677146101ce578063b6011caa146101ea578063beb0273f14610208576100cf565b806301ffc9a7146100d457806330452f7d146101045780637b103999146101345780638ec4d94a146101525780639779f69b1461016e578063a0d101b61461019e575b600080fd5b6100ee60048036038101906100e9919061122b565b6102be565b6040516100fb9190611273565b60405180910390f35b61011e600480360381019061011991906112c4565b610390565b60405161012b91906113af565b60405180910390f35b61013c6103b4565b6040516101499190611450565b60405180910390f35b61016c60048036038101906101679190611490565b6103d8565b005b610188600480360381019061018391906114d0565b6104e5565b604051610195919061151f565b60405180910390f35b6101b860048036038101906101b391906114d0565b61050a565b6040516101c5919061151f565b60405180910390f35b6101e860048036038101906101e3919061153a565b6106c5565b005b6101f26107d3565b6040516101ff919061151f565b60405180910390f35b610222600480360381019061021d91906115b9565b6107d9565b005b61023e600480360381019061023991906112c4565b610887565b60405161024b9190611273565b60405180910390f35b61026e600480360381019061026991906112c4565b6108f7565b60405161027d93929190611670565b60405180910390f35b6102a0600480360381019061029b91906114d0565b61093b565b005b6102bc60048036038101906102b7919061153a565b610b06565b005b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061038957507f2a7feeb8000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b60606103ad60336000848152602001908152602001600020610cd4565b9050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b816103e281610cf5565b603660008154809291906103f5906116d6565b919050555082603460006036548152602001908152602001600020600001819055508160346000603654815260200190815260200160002060010160006101000a81548160ff02191690836001811115610452576104516115f9565b5b0217905550600160346000603654815260200190815260200160002060010160016101000a81548160ff0219169083151502179055506104af60365460336000868152602001908152602001600020610d4090919063ffffffff16565b50603654837fa9ebf2e930c43255fd27946e8db3724cb89418b053bedbc87b1d5b5d281ef0a560405160405180910390a3505050565b6035602052816000526040600020602052806000526040600020600091509150505481565b600060346000848152602001908152602001600020600001548361052e8282610d5a565b6105c560008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fc9354fa6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561059c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c0919061175c565b610dc2565b6000603560008781526020019081526020016000206000868152602001908152602001600020549050600060356000888152602001908152602001600020600087815260200190815260200160002081905550848660346000898152602001908152602001600020600001547f8c4cd571e59e94c60c48db506ea19b2a32773e7b8536b59312c695a3b12fc4b2600060405161066191906117c4565b60405180910390a4848660346000898152602001908152602001600020600001547f21e681faae0345da23c6db6eb681e8b3500e46a54de52de29deecb7c9030c524846040516106b1919061151f565b60405180910390a480935050505092915050565b6034600084815260200190815260200160002060000154836106e78282610d5a565b6106f082610cf5565b6034600082815260200190815260200160002060010160019054906101000a900460ff16610753576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074a9061183c565b60405180910390fd5b8260356000878152602001908152602001600020600086815260200190815260200160002081905550838560346000888152602001908152602001600020600001547f8c4cd571e59e94c60c48db506ea19b2a32773e7b8536b59312c695a3b12fc4b2866040516107c4919061151f565b60405180910390a45050505050565b60365481565b6034600083815260200190815260200160002060000154826107fb8282610d5a565b61080482610cf5565b826034600086815260200190815260200160002060010160016101000a81548160ff0219169083151502179055508360346000868152602001908152602001600020600001547fb45813d8ee3cb56ae54437287ec3cfb61515c896efded410388197bcf8a6c7ba856040516108799190611273565b60405180910390a350505050565b60006108c4826033600060346000878152602001908152602001600020600001548152602001908152602001600020610e3a90919063ffffffff16565b80156108f057506034600083815260200190815260200160002060010160019054906101000a900460ff165b9050919050565b60346020528060005260406000206000915090508060000154908060010160009054906101000a900460ff16908060010160019054906101000a900460ff16905083565b60346000838152602001908152602001600020600001548261095d8282610d5a565b61096682610cf5565b6034600082815260200190815260200160002060010160019054906101000a900460ff166109c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109c09061183c565b60405180910390fd5b6001808111156109dc576109db6115f9565b5b6034600086815260200190815260200160002060010160009054906101000a900460ff166001811115610a1257610a116115f9565b5b14610a52576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a49906118a8565b60405180910390fd5b6035600085815260200190815260200160002060008481526020019081526020016000206000815480929190610a87906116d6565b9190505550828460346000878152602001908152602001600020600001547f8c4cd571e59e94c60c48db506ea19b2a32773e7b8536b59312c695a3b12fc4b260356000898152602001908152602001600020600088815260200190815260200160002054604051610af8919061151f565b60405180910390a450505050565b603460008481526020019081526020016000206000015483610b288282610d5a565b610b3182610cf5565b6034600082815260200190815260200160002060010160019054906101000a900460ff16610b94576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b8b9061183c565b60405180910390fd5b60006001811115610ba857610ba76115f9565b5b6034600087815260200190815260200160002060010160009054906101000a900460ff166001811115610bde57610bdd6115f9565b5b14610c1e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c1590611914565b60405180910390fd5b826035600087815260200190815260200160002060008681526020019081526020016000206000828254610c529190611934565b92505081905550838560346000888152602001908152602001600020600001547f8c4cd571e59e94c60c48db506ea19b2a32773e7b8536b59312c695a3b12fc4b2603560008a8152602001908152602001600020600089815260200190815260200160002054604051610cc5919061151f565b60405180910390a45050505050565b60606000610ce483600001610e54565b905060608190508092505050919050565b610cfe81610eb0565b610d3d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d34906119b4565b60405180910390fd5b50565b6000610d52836000018360001b610fda565b905092915050565b610d7f8160336000858152602001908152602001600020610e3a90919063ffffffff16565b610dbe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610db590611a46565b60405180910390fd5b5050565b8073ffffffffffffffffffffffffffffffffffffffff16610de161104a565b73ffffffffffffffffffffffffffffffffffffffff1614610e37576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e2e90611ab2565b60405180910390fd5b50565b6000610e4c836000018360001b611052565b905092915050565b606081600001805480602002602001604051908101604052809291908181526020018280548015610ea457602002820191906000526020600020905b815481526020019060010190808311610e90575b50505050509050919050565b6000610ebb82611075565b80610fd3575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663595439736040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f2c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f50919061175c565b73ffffffffffffffffffffffffffffffffffffffff1663146a291183610f7461104a565b6040518363ffffffff1660e01b8152600401610f91929190611ae1565b602060405180830381865afa158015610fae573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fd29190611b1f565b5b9050919050565b6000610fe68383611052565b61103f578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050611044565b600090505b92915050565b600033905090565b600080836001016000848152602001908152602001600020541415905092915050565b600061107f61104a565b73ffffffffffffffffffffffffffffffffffffffff1661109e836110bc565b73ffffffffffffffffffffffffffffffffffffffff16149050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cfd8fe0c6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561112a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061114e919061175c565b73ffffffffffffffffffffffffffffffffffffffff16636352211e836040518263ffffffff1660e01b8152600401611186919061151f565b602060405180830381865afa1580156111a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111c7919061175c565b9050919050565b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611208816111d3565b811461121357600080fd5b50565b600081359050611225816111ff565b92915050565b600060208284031215611241576112406111ce565b5b600061124f84828501611216565b91505092915050565b60008115159050919050565b61126d81611258565b82525050565b60006020820190506112886000830184611264565b92915050565b6000819050919050565b6112a18161128e565b81146112ac57600080fd5b50565b6000813590506112be81611298565b92915050565b6000602082840312156112da576112d96111ce565b5b60006112e8848285016112af565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6113268161128e565b82525050565b6000611338838361131d565b60208301905092915050565b6000602082019050919050565b600061135c826112f1565b61136681856112fc565b93506113718361130d565b8060005b838110156113a2578151611389888261132c565b975061139483611344565b925050600181019050611375565b5085935050505092915050565b600060208201905081810360008301526113c98184611351565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061141661141161140c846113d1565b6113f1565b6113d1565b9050919050565b6000611428826113fb565b9050919050565b600061143a8261141d565b9050919050565b61144a8161142f565b82525050565b60006020820190506114656000830184611441565b92915050565b6002811061147857600080fd5b50565b60008135905061148a8161146b565b92915050565b600080604083850312156114a7576114a66111ce565b5b60006114b5858286016112af565b92505060206114c68582860161147b565b9150509250929050565b600080604083850312156114e7576114e66111ce565b5b60006114f5858286016112af565b9250506020611506858286016112af565b9150509250929050565b6115198161128e565b82525050565b60006020820190506115346000830184611510565b92915050565b600080600060608486031215611553576115526111ce565b5b6000611561868287016112af565b9350506020611572868287016112af565b9250506040611583868287016112af565b9150509250925092565b61159681611258565b81146115a157600080fd5b50565b6000813590506115b38161158d565b92915050565b600080604083850312156115d0576115cf6111ce565b5b60006115de858286016112af565b92505060206115ef858286016115a4565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60028110611639576116386115f9565b5b50565b600081905061164a82611628565b919050565b600061165a8261163c565b9050919050565b61166a8161164f565b82525050565b60006060820190506116856000830186611510565b6116926020830185611661565b61169f6040830184611264565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006116e18261128e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611713576117126116a7565b5b600182019050919050565b6000611729826113d1565b9050919050565b6117398161171e565b811461174457600080fd5b50565b60008151905061175681611730565b92915050565b600060208284031215611772576117716111ce565b5b600061178084828501611747565b91505092915050565b6000819050919050565b60006117ae6117a96117a484611789565b6113f1565b61128e565b9050919050565b6117be81611793565b82525050565b60006020820190506117d960008301846117b5565b92915050565b600082825260208201905092915050565b7f4d65746572206973206e6f742061637469766500000000000000000000000000600082015250565b60006118266013836117df565b9150611831826117f0565b602082019050919050565b6000602082019050818103600083015261185581611819565b9050919050565b7f4d65746572206973206e6f74206120636f756e74206d65746572000000000000600082015250565b6000611892601a836117df565b915061189d8261185c565b602082019050919050565b600060208201905081810360008301526118c181611885565b9050919050565b7f4d65746572206973206e6f7420612073756d206d657465720000000000000000600082015250565b60006118fe6018836117df565b9150611909826118c8565b602082019050919050565b6000602082019050818103600083015261192d816118f1565b9050919050565b600061193f8261128e565b915061194a8361128e565b9250828201905080821115611962576119616116a7565b5b92915050565b7f4e6f7420616e2061646d696e206f6620746865206f7267616e697a6174696f6e600082015250565b600061199e6020836117df565b91506119a982611968565b602082019050919050565b600060208201905081810360008301526119cd81611991565b9050919050565b7f4d6574657220646f6573206e6f7420657869737420666f7220746865206f726760008201527f616e697a6174696f6e0000000000000000000000000000000000000000000000602082015250565b6000611a306029836117df565b9150611a3b826119d4565b604082019050919050565b60006020820190508181036000830152611a5f81611a23565b9050919050565b7f43616c6c6572206e6f7420617574686f72697a65640000000000000000000000600082015250565b6000611a9c6015836117df565b9150611aa782611a66565b602082019050919050565b60006020820190508181036000830152611acb81611a8f565b9050919050565b611adb8161171e565b82525050565b6000604082019050611af66000830185611510565b611b036020830184611ad2565b9392505050565b600081519050611b198161158d565b92915050565b600060208284031215611b3557611b346111ce565b5b6000611b4384828501611b0a565b9150509291505056fea26469706673582212203f0f1936fbd3d6986837629efafef74916db54bf38b00aacc5436773cee138d064736f6c63430008180033";

type UsageRecorderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UsageRecorderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UsageRecorder__factory extends ContractFactory {
  constructor(...args: UsageRecorderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _contractRegistry: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_contractRegistry, overrides || {});
  }
  override deploy(
    _contractRegistry: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_contractRegistry, overrides || {}) as Promise<
      UsageRecorder & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): UsageRecorder__factory {
    return super.connect(runner) as UsageRecorder__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UsageRecorderInterface {
    return new Interface(_abi) as UsageRecorderInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): UsageRecorder {
    return new Contract(address, _abi, runner) as unknown as UsageRecorder;
  }
}
