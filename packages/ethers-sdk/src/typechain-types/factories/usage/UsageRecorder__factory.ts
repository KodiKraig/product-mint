/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  UsageRecorder,
  UsageRecorderInterface,
} from "../../usage/UsageRecorder";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_contractRegistry",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "organizationId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "meterId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    name: "MeterActiveSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "organizationId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "meterId",
        type: "uint256",
      },
    ],
    name: "MeterCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "organizationId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "meterId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "usage",
        type: "uint256",
      },
    ],
    name: "MeterPaymentProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "organizationId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "meterId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "usage",
        type: "uint256",
      },
    ],
    name: "MeterUsageSet",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "meterId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "adjustMeter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "organizationId",
        type: "uint256",
      },
      {
        internalType: "enum IUsageRecorder.AggregationMethod",
        name: "aggregationMethod",
        type: "uint8",
      },
    ],
    name: "createMeter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "organizationId",
        type: "uint256",
      },
    ],
    name: "getOrganizationMeters",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "meterId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "increaseMeter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "meterId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "incrementMeter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "meterId",
        type: "uint256",
      },
    ],
    name: "isActiveOrgMeter",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "passUsages",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "meterId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "processMeterPayment",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "contract IContractRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "meterId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    name: "setMeterActive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalMeterCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "usageMeters",
    outputs: [
      {
        internalType: "uint256",
        name: "orgId",
        type: "uint256",
      },
      {
        internalType: "enum IUsageRecorder.AggregationMethod",
        name: "aggregationMethod",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001cbd38038062001cbd8339818101604052810190620000379190620000ea565b80806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506200011c565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000b28262000085565b9050919050565b620000c481620000a5565b8114620000d057600080fd5b50565b600081519050620000e481620000b9565b92915050565b60006020828403121562000103576200010262000080565b5b60006200011384828501620000d3565b91505092915050565b611b91806200012c6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063af1af6771161008c578063c14ed61511610066578063c14ed61514610224578063c95fdd6514610254578063f3cb568614610286578063ff277fb6146102a2576100cf565b8063af1af677146101ce578063b6011caa146101ea578063beb0273f14610208576100cf565b806301ffc9a7146100d457806330452f7d146101045780637b103999146101345780638ec4d94a146101525780639779f69b1461016e578063a0d101b61461019e575b600080fd5b6100ee60048036038101906100e9919061123a565b6102be565b6040516100fb9190611282565b60405180910390f35b61011e600480360381019061011991906112d3565b610390565b60405161012b91906113be565b60405180910390f35b61013c6103b4565b604051610149919061145f565b60405180910390f35b61016c6004803603810190610167919061149f565b6103d8565b005b610188600480360381019061018391906114df565b6104e5565b604051610195919061152e565b60405180910390f35b6101b860048036038101906101b391906114df565b61050a565b6040516101c5919061152e565b60405180910390f35b6101e860048036038101906101e39190611549565b6106c5565b005b6101f26107d3565b6040516101ff919061152e565b60405180910390f35b610222600480360381019061021d91906115c8565b6107d9565b005b61023e600480360381019061023991906112d3565b610887565b60405161024b9190611282565b60405180910390f35b61026e600480360381019061026991906112d3565b6108f7565b60405161027d9392919061167f565b60405180910390f35b6102a0600480360381019061029b91906114df565b61093b565b005b6102bc60048036038101906102b79190611549565b610b06565b005b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061038957507f2a7feeb8000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b60606103ad60336000848152602001908152602001600020610cd4565b9050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b816103e281610cf5565b603660008154809291906103f5906116e5565b919050555082603460006036548152602001908152602001600020600001819055508160346000603654815260200190815260200160002060010160006101000a81548160ff0219169083600181111561045257610451611608565b5b0217905550600160346000603654815260200190815260200160002060010160016101000a81548160ff0219169083151502179055506104af60365460336000868152602001908152602001600020610d4090919063ffffffff16565b50603654837fa9ebf2e930c43255fd27946e8db3724cb89418b053bedbc87b1d5b5d281ef0a560405160405180910390a3505050565b6035602052816000526040600020602052806000526040600020600091509150505481565b600060346000848152602001908152602001600020600001548361052e8282610d5a565b6105c560008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fc9354fa6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561059c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c0919061176b565b610dc2565b6000603560008781526020019081526020016000206000868152602001908152602001600020549050600060356000888152602001908152602001600020600087815260200190815260200160002081905550848660346000898152602001908152602001600020600001547f8c4cd571e59e94c60c48db506ea19b2a32773e7b8536b59312c695a3b12fc4b2600060405161066191906117d3565b60405180910390a4848660346000898152602001908152602001600020600001547f21e681faae0345da23c6db6eb681e8b3500e46a54de52de29deecb7c9030c524846040516106b1919061152e565b60405180910390a480935050505092915050565b6034600084815260200190815260200160002060000154836106e78282610d5a565b6106f082610cf5565b6034600082815260200190815260200160002060010160019054906101000a900460ff16610753576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074a9061184b565b60405180910390fd5b8260356000878152602001908152602001600020600086815260200190815260200160002081905550838560346000888152602001908152602001600020600001547f8c4cd571e59e94c60c48db506ea19b2a32773e7b8536b59312c695a3b12fc4b2866040516107c4919061152e565b60405180910390a45050505050565b60365481565b6034600083815260200190815260200160002060000154826107fb8282610d5a565b61080482610cf5565b826034600086815260200190815260200160002060010160016101000a81548160ff0219169083151502179055508360346000868152602001908152602001600020600001547fb45813d8ee3cb56ae54437287ec3cfb61515c896efded410388197bcf8a6c7ba856040516108799190611282565b60405180910390a350505050565b60006108c4826033600060346000878152602001908152602001600020600001548152602001908152602001600020610e3a90919063ffffffff16565b80156108f057506034600083815260200190815260200160002060010160019054906101000a900460ff165b9050919050565b60346020528060005260406000206000915090508060000154908060010160009054906101000a900460ff16908060010160019054906101000a900460ff16905083565b60346000838152602001908152602001600020600001548261095d8282610d5a565b61096682610cf5565b6034600082815260200190815260200160002060010160019054906101000a900460ff166109c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109c09061184b565b60405180910390fd5b6001808111156109dc576109db611608565b5b6034600086815260200190815260200160002060010160009054906101000a900460ff166001811115610a1257610a11611608565b5b14610a52576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a49906118b7565b60405180910390fd5b6035600085815260200190815260200160002060008481526020019081526020016000206000815480929190610a87906116e5565b9190505550828460346000878152602001908152602001600020600001547f8c4cd571e59e94c60c48db506ea19b2a32773e7b8536b59312c695a3b12fc4b260356000898152602001908152602001600020600088815260200190815260200160002054604051610af8919061152e565b60405180910390a450505050565b603460008481526020019081526020016000206000015483610b288282610d5a565b610b3182610cf5565b6034600082815260200190815260200160002060010160019054906101000a900460ff16610b94576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b8b9061184b565b60405180910390fd5b60006001811115610ba857610ba7611608565b5b6034600087815260200190815260200160002060010160009054906101000a900460ff166001811115610bde57610bdd611608565b5b14610c1e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c1590611923565b60405180910390fd5b826035600087815260200190815260200160002060008681526020019081526020016000206000828254610c529190611943565b92505081905550838560346000888152602001908152602001600020600001547f8c4cd571e59e94c60c48db506ea19b2a32773e7b8536b59312c695a3b12fc4b2603560008a8152602001908152602001600020600089815260200190815260200160002054604051610cc5919061152e565b60405180910390a45050505050565b60606000610ce483600001610e54565b905060608190508092505050919050565b610cfe81610eb0565b610d3d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d34906119c3565b60405180910390fd5b50565b6000610d52836000018360001b610eca565b905092915050565b610d7f8160336000858152602001908152602001600020610e3a90919063ffffffff16565b610dbe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610db590611a55565b60405180910390fd5b5050565b8073ffffffffffffffffffffffffffffffffffffffff16610de1610f3a565b73ffffffffffffffffffffffffffffffffffffffff1614610e37576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e2e90611ac1565b60405180910390fd5b50565b6000610e4c836000018360001b610f42565b905092915050565b606081600001805480602002602001604051908101604052809291908181526020018280548015610ea457602002820191906000526020600020905b815481526020019060010190808311610e90575b50505050509050919050565b6000610ec382610ebe610f3a565b610f65565b9050919050565b6000610ed68383610f42565b610f2f578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050610f34565b600090505b92915050565b600033905090565b600080836001016000848152602001908152602001600020541415905092915050565b6000610f71838361108a565b80611082575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663595439736040518163ffffffff1660e01b8152600401602060405180830381865afa158015610fe2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611006919061176b565b73ffffffffffffffffffffffffffffffffffffffff1663146a291184846040518363ffffffff1660e01b8152600401611040929190611af0565b602060405180830381865afa15801561105d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110819190611b2e565b5b905092915050565b60008173ffffffffffffffffffffffffffffffffffffffff166110ac846110cb565b73ffffffffffffffffffffffffffffffffffffffff1614905092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cfd8fe0c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611139573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061115d919061176b565b73ffffffffffffffffffffffffffffffffffffffff16636352211e836040518263ffffffff1660e01b8152600401611195919061152e565b602060405180830381865afa1580156111b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111d6919061176b565b9050919050565b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611217816111e2565b811461122257600080fd5b50565b6000813590506112348161120e565b92915050565b6000602082840312156112505761124f6111dd565b5b600061125e84828501611225565b91505092915050565b60008115159050919050565b61127c81611267565b82525050565b60006020820190506112976000830184611273565b92915050565b6000819050919050565b6112b08161129d565b81146112bb57600080fd5b50565b6000813590506112cd816112a7565b92915050565b6000602082840312156112e9576112e86111dd565b5b60006112f7848285016112be565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6113358161129d565b82525050565b6000611347838361132c565b60208301905092915050565b6000602082019050919050565b600061136b82611300565b611375818561130b565b93506113808361131c565b8060005b838110156113b1578151611398888261133b565b97506113a383611353565b925050600181019050611384565b5085935050505092915050565b600060208201905081810360008301526113d88184611360565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061142561142061141b846113e0565b611400565b6113e0565b9050919050565b60006114378261140a565b9050919050565b60006114498261142c565b9050919050565b6114598161143e565b82525050565b60006020820190506114746000830184611450565b92915050565b6002811061148757600080fd5b50565b6000813590506114998161147a565b92915050565b600080604083850312156114b6576114b56111dd565b5b60006114c4858286016112be565b92505060206114d58582860161148a565b9150509250929050565b600080604083850312156114f6576114f56111dd565b5b6000611504858286016112be565b9250506020611515858286016112be565b9150509250929050565b6115288161129d565b82525050565b6000602082019050611543600083018461151f565b92915050565b600080600060608486031215611562576115616111dd565b5b6000611570868287016112be565b9350506020611581868287016112be565b9250506040611592868287016112be565b9150509250925092565b6115a581611267565b81146115b057600080fd5b50565b6000813590506115c28161159c565b92915050565b600080604083850312156115df576115de6111dd565b5b60006115ed858286016112be565b92505060206115fe858286016115b3565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002811061164857611647611608565b5b50565b600081905061165982611637565b919050565b60006116698261164b565b9050919050565b6116798161165e565b82525050565b6000606082019050611694600083018661151f565b6116a16020830185611670565b6116ae6040830184611273565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006116f08261129d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611722576117216116b6565b5b600182019050919050565b6000611738826113e0565b9050919050565b6117488161172d565b811461175357600080fd5b50565b6000815190506117658161173f565b92915050565b600060208284031215611781576117806111dd565b5b600061178f84828501611756565b91505092915050565b6000819050919050565b60006117bd6117b86117b384611798565b611400565b61129d565b9050919050565b6117cd816117a2565b82525050565b60006020820190506117e860008301846117c4565b92915050565b600082825260208201905092915050565b7f4d65746572206973206e6f742061637469766500000000000000000000000000600082015250565b60006118356013836117ee565b9150611840826117ff565b602082019050919050565b6000602082019050818103600083015261186481611828565b9050919050565b7f4d65746572206973206e6f74206120636f756e74206d65746572000000000000600082015250565b60006118a1601a836117ee565b91506118ac8261186b565b602082019050919050565b600060208201905081810360008301526118d081611894565b9050919050565b7f4d65746572206973206e6f7420612073756d206d657465720000000000000000600082015250565b600061190d6018836117ee565b9150611918826118d7565b602082019050919050565b6000602082019050818103600083015261193c81611900565b9050919050565b600061194e8261129d565b91506119598361129d565b9250828201905080821115611971576119706116b6565b5b92915050565b7f4e6f7420616e2061646d696e206f6620746865206f7267616e697a6174696f6e600082015250565b60006119ad6020836117ee565b91506119b882611977565b602082019050919050565b600060208201905081810360008301526119dc816119a0565b9050919050565b7f4d6574657220646f6573206e6f7420657869737420666f7220746865206f726760008201527f616e697a6174696f6e0000000000000000000000000000000000000000000000602082015250565b6000611a3f6029836117ee565b9150611a4a826119e3565b604082019050919050565b60006020820190508181036000830152611a6e81611a32565b9050919050565b7f43616c6c6572206e6f7420617574686f72697a65640000000000000000000000600082015250565b6000611aab6015836117ee565b9150611ab682611a75565b602082019050919050565b60006020820190508181036000830152611ada81611a9e565b9050919050565b611aea8161172d565b82525050565b6000604082019050611b05600083018561151f565b611b126020830184611ae1565b9392505050565b600081519050611b288161159c565b92915050565b600060208284031215611b4457611b436111dd565b5b6000611b5284828501611b19565b9150509291505056fea264697066735822122070071aedbbb9f2c3045b27f4c9948f85149e40265e6ad0fe3d97da3d10c4a3aa64736f6c63430008180033";

type UsageRecorderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UsageRecorderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UsageRecorder__factory extends ContractFactory {
  constructor(...args: UsageRecorderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _contractRegistry: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_contractRegistry, overrides || {});
  }
  override deploy(
    _contractRegistry: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_contractRegistry, overrides || {}) as Promise<
      UsageRecorder & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): UsageRecorder__factory {
    return super.connect(runner) as UsageRecorder__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UsageRecorderInterface {
    return new Interface(_abi) as UsageRecorderInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): UsageRecorder {
    return new Contract(address, _abi, runner) as unknown as UsageRecorder;
  }
}
